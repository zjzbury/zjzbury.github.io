<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>JAVA • Posts by &#34;redis&#34; tag</title>
        <link>http://www.startanew.cn</link>
        <description>爱编程，爱生活</description>
        <language>zh-CN</language>
        <pubDate>Tue, 14 Jul 2020 08:34:50 +0800</pubDate>
        <lastBuildDate>Tue, 14 Jul 2020 08:34:50 +0800</lastBuildDate>
        <category>java</category>
        <category>springboot</category>
        <category>javaweb</category>
        <category>javascript</category>
        <category>MYSQL</category>
        <category>redis</category>
        <category>其他</category>
        <category>docker</category>
        <category>dos命令</category>
        <category>git</category>
        <category>android</category>
        <category>maven</category>
        <category>mysql</category>
        <category>spring-sceurity</category>
        <category>webrtc</category>
        <category>员工关系管理</category>
        <category>近代史</category>
        <category>工作分析</category>
        <category>树莓派</category>
        <category>tinc</category>
        <item>
            <guid isPermalink="true">http://www.startanew.cn/2020/07/14/redis5-0-5%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</guid>
            <title>redis5.0.5集群搭建</title>
            <link>http://www.startanew.cn/2020/07/14/redis5-0-5%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</link>
            <category>redis</category>
            <pubDate>Tue, 14 Jul 2020 08:34:50 +0800</pubDate>
            <description><![CDATA[ &lt;h4 id=&#34;配置文件详解配置文件见文章后面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置文件详解配置文件见文章后面&#34;&gt;#&lt;/a&gt; 配置文件详解（配置文件见文章后面）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;修改如下内容&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;port 6379&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;daemonize yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pidfile &amp;#x2F;var&amp;#x2F;run&amp;#x2F;redis_6379.pid&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cluster-enabled yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cluster-node-timeout 15000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cluster-config-file  nodes-6379.conf &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;其他节点只需修改端口和文件名，依次按此进行配置即可，配置完成后启动这些节点&lt;/li&gt;
&lt;li&gt;启动 redis&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-server redis6379&amp;#x2F;redis.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-server redis6380&amp;#x2F;redis.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-server redis6381&amp;#x2F;redis.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-server redis6382&amp;#x2F;redis.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-server redis6383&amp;#x2F;redis.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-server redis6384&amp;#x2F;redis.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;  
&lt;ul&gt;
&lt;li&gt;ps -ef|grep redis  查看启动状态&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;配置集群&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置集群&#34;&gt;#&lt;/a&gt; 配置集群&lt;/h4&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-cli --cluster create 127.0.0.1:6379 127.0.0.1:6380 127.0.0.1:6381 127.0.0.1:6382 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6383 127.0.0.1:6384 --cluster-replicas 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;其中 - replicas 1 表示每个主节点 1 个从节点&lt;br&gt;
效果图如下:&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;
 &lt;img data-src=&#34;http://vps.startanew.cn/1594687118428yce0hwom.png&#34; &gt;
&lt;/center&gt;   
&lt;center&gt;
 &lt;img data-src=&#34;http://vps.startanew.cn/159468712652932603ftw.png&#34; &gt;
&lt;/center&gt;   
&lt;h4 id=&#34;测试集群&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#测试集群&#34;&gt;#&lt;/a&gt; 测试集群&lt;/h4&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-cli -h 127.0.0.1 -c -p 6379&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;节点扩容&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#节点扩容&#34;&gt;#&lt;/a&gt; 节点扩容&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;查看节点列表:&lt;br&gt;
cluster nodes 节点扩容：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-cli --cluster add-node 127.0.0.1:6385 127.0.0.1:6379&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;添加从节点:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-cli --cluster add-node 127.0.0.1:6386 127.0.0.1:6379 --cluster-slave --cluster-master-id   -------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;为新节点分配数据:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-cli --cluster reshard 127.0.0.1:6385&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#### 节点缩减&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;缩减从节点&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-cli --cluster del-node 127.0.0.1:6386 7c24e205301b38caa1ff3cd8b270a1ceb7249a2e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;主节点slot转移&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-cli --cluster reshard 127.0.0.1:6385&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;缩减主节点&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.&amp;#x2F;redis-cli --cluster del-node 127.0.0.1:6385 22e8a8e97d6f7cc7d627e577a986384d4d181a4f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置文件&#34;&gt;#&lt;/a&gt; 配置文件&lt;/h4&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;246&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;247&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;248&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;249&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;250&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;251&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;252&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;253&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;254&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;257&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;258&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;259&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;260&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;261&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;262&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;263&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;264&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;265&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;266&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;267&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;268&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;269&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;270&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;271&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;272&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;273&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;274&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;275&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;276&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;277&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;278&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;279&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;280&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;281&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;282&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;283&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;284&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;285&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;286&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;287&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;288&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;289&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;291&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;292&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;293&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;294&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;295&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;296&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;297&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;298&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;299&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;300&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;301&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;302&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;303&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;304&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;305&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;306&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;307&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;308&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;309&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;310&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;311&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;312&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;313&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;314&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;315&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;316&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;317&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;318&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;319&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;320&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;321&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;322&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;323&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;324&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;325&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;326&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;327&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;328&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;329&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;330&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;331&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;332&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;334&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;335&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;336&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;337&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;338&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;339&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;340&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;341&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;342&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;343&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;344&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;345&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;346&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;347&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;348&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;349&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;350&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;351&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;352&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;353&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;354&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;355&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;356&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;357&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;358&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;359&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;360&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;361&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;362&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;363&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;364&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;365&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;366&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;367&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;368&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;369&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;370&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;371&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;372&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;373&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;374&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;375&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;376&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;377&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;378&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;379&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;380&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;381&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;382&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;383&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;384&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;385&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;386&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;387&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;388&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;389&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;390&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;391&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;392&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;393&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;394&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;395&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;396&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;397&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;398&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;399&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;400&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;402&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;403&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;404&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;405&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;406&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;407&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;408&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;409&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;410&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;411&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;412&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;413&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;414&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;415&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;416&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;417&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;418&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;419&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;420&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;421&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;422&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;423&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;424&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;425&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;426&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;427&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;428&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;429&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;430&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;431&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;432&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;433&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;434&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;435&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;436&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;437&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;438&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;439&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;440&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;441&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;442&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;443&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;445&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;446&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;447&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;448&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;449&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;450&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;451&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;452&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;453&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;454&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;455&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;456&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;457&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;458&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;459&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;460&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;461&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;462&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;463&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;464&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;465&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;466&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;467&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;468&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;469&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;470&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;471&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;472&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;473&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;474&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;475&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;476&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;477&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;478&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;479&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;480&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;481&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;482&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;483&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;484&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;485&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;486&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;487&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;488&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;489&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;490&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;491&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;492&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;493&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;494&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;495&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;496&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;497&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;498&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;499&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;500&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;501&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;502&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;503&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;504&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;505&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;506&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;507&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;508&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;509&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;510&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;511&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;512&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;513&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;514&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;515&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;516&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;517&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;518&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;519&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;520&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;521&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;522&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;523&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;524&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;525&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;526&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;527&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;528&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;529&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;530&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;531&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;532&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;533&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;534&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;535&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;536&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;538&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;539&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;540&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;541&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;542&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;543&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;544&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;545&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;546&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;547&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;548&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;549&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;550&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;551&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;552&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;553&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;554&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;555&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;556&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;557&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;558&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;559&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;560&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;561&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;562&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;563&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;564&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;565&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;566&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;567&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;568&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;569&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;570&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;571&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;572&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;573&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;574&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;575&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;576&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;577&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;578&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;579&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;580&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;581&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;582&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;583&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;584&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;585&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;586&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;587&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;588&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;589&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;590&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;591&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;592&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;593&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;594&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;595&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;596&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;597&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;598&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;599&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;600&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;601&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;602&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;603&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;604&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;605&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;606&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;607&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;608&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;609&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;610&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;611&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;612&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;613&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;614&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;615&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;616&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;617&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;618&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;619&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;620&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;621&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;622&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;623&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;624&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;625&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;626&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;627&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;628&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;629&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;630&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;631&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;632&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;633&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;634&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;635&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;636&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;637&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;638&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;639&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;640&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;641&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;642&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;644&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;645&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;646&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;647&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;648&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;649&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;650&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;651&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;652&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;653&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;654&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;655&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;656&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;657&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;658&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;659&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;660&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;661&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;662&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;663&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;664&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;665&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;666&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;667&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;668&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;669&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;670&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;671&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;672&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;673&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;674&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;675&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;676&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;677&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;678&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;679&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;680&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;681&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;682&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;683&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;684&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;685&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;686&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;687&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;688&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;689&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;690&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;691&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;692&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;693&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;694&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;695&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;696&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;697&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;698&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;699&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;700&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;701&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;702&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;703&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;704&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;705&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;706&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;707&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;708&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;709&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;710&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;711&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;712&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;713&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;714&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;715&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;716&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;717&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;718&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;719&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;720&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;721&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;722&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;723&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;724&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;725&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;726&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;727&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;728&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;729&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;730&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;731&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;732&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;733&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;734&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;735&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;736&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;737&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;738&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;739&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;740&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;741&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;742&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;743&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;744&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;745&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;746&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;747&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;748&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;749&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;750&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;751&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;752&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;753&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;754&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;755&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;756&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;757&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;758&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;759&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;760&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;761&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;762&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;763&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;764&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;765&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;766&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;767&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;768&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;769&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;770&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;771&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;772&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;773&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;774&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;775&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;776&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;777&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;778&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;779&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;780&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;781&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;782&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;783&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;784&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;785&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;786&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;787&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;788&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;789&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;790&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;791&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;792&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;793&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;794&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;795&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;796&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;797&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;798&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;799&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;801&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;802&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;803&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;804&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;805&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;806&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;807&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;808&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;809&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;810&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;811&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;812&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;813&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;814&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;815&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;816&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;817&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;818&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;819&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;820&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;821&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;822&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;823&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;824&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;825&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;826&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;827&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;828&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;829&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;830&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;831&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;832&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;833&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;834&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;835&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;836&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;837&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;838&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;839&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;840&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;841&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;842&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;843&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;844&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;845&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;846&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;847&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;848&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;849&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;850&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;851&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;852&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;853&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;854&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;855&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;856&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;857&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;858&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;859&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;860&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;861&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;862&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;863&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;864&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;865&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;866&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;867&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;868&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;869&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;870&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;871&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;872&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;873&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;874&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;875&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;876&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;877&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;878&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;879&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;880&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;881&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;882&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;883&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;884&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;885&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;886&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;887&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;888&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;889&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;890&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;891&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;892&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;893&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;894&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;895&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;896&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;897&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;898&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;899&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;900&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;901&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;902&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;903&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;904&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;905&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;906&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;907&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;908&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;909&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;910&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;911&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;912&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;913&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;914&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;915&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;916&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;917&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;918&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;919&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;920&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;921&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;922&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;923&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;924&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;925&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;926&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;927&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;928&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;929&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;930&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;931&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;932&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;933&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;934&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;935&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;936&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;937&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;938&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;939&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;940&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;941&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;942&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;943&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;944&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;945&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;946&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;947&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;948&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;949&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;950&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;951&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;952&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;953&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;954&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;955&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;956&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;957&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;958&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;959&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;960&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;961&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;962&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;963&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;964&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;965&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;966&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;967&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;968&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;969&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;970&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;971&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;972&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;973&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;974&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;975&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;976&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;977&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;978&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;979&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;980&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;981&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;982&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;983&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;984&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;985&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;986&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;987&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;988&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;989&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;990&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;991&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;992&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;993&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;994&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;995&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;996&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;997&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;998&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;999&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1001&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1002&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1003&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1004&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1005&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1006&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1007&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1008&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1009&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1010&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1011&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1012&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1013&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1014&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1015&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1016&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1017&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1018&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1019&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1020&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1021&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1022&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1023&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1024&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1025&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1026&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1027&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1028&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1029&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1030&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1031&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1032&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1033&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1034&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1035&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1036&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1037&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1038&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1039&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1040&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1041&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1042&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1043&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1044&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1045&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1046&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1047&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1048&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1049&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1050&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1051&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1052&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1053&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1055&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1056&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1057&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1058&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1059&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1060&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1061&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1062&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1063&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1064&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1065&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1066&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1067&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1068&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1069&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1070&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1071&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1072&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1073&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1074&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1075&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1076&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1077&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1078&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1079&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1080&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1081&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1082&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1083&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1084&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1085&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1086&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1087&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1088&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1089&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1090&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1091&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1092&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1093&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1094&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1095&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1096&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1097&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1098&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1099&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1205&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1206&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1207&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1208&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1209&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1210&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1211&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1213&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1214&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1215&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1216&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1217&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1218&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1219&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1220&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1221&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1223&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1224&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1225&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1226&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1227&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1228&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1229&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1230&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1231&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1232&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1233&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1234&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1235&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1236&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1238&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1239&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1240&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1241&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1242&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1243&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1244&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1245&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1246&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1247&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1248&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1249&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1250&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1251&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1252&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1253&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1254&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1257&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1258&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1259&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1260&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1261&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1262&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1263&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1264&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1265&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1266&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1267&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1268&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1269&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1270&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1271&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1272&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1273&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1274&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1275&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1276&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1277&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1278&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1279&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1280&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1281&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1282&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1283&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1284&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1285&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1286&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1287&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1288&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1289&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1291&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1292&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1293&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1294&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1295&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1296&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1297&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1298&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1299&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1300&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1301&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1302&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1303&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1304&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1305&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1306&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1307&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1308&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1309&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1310&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1311&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1312&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1313&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1314&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1315&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1316&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1317&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1318&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1319&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1320&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1321&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1322&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1323&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1324&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1325&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1326&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1327&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1328&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1329&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1330&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1331&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1332&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1334&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1335&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1336&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1337&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1338&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1339&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1340&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1341&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1342&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1343&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1344&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1345&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1346&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1347&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1348&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1349&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1350&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1351&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1352&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1353&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1354&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1355&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1356&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1357&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1358&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1359&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1360&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1361&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1362&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1363&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1364&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1365&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1366&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1367&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1368&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1369&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1370&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1371&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1372&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1373&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1374&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1375&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1376&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1377&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1378&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1379&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1380&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1381&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1382&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1383&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1384&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1385&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1386&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# Redis configuration file example.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Note that in order to read the configuration file, Redis must be&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# started with the file path as first argument:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# .&amp;#x2F;redis-server &amp;#x2F;path&amp;#x2F;to&amp;#x2F;redis.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Note on units: when memory size is needed, it is possible to specify&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# it in the usual form of 1k 5GB 4M and so forth:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1k &amp;#x3D;&amp;gt; 1000 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1kb &amp;#x3D;&amp;gt; 1024 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1m &amp;#x3D;&amp;gt; 1000000 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1mb &amp;#x3D;&amp;gt; 1024*1024 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1g &amp;#x3D;&amp;gt; 1000000000 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1gb &amp;#x3D;&amp;gt; 1024*1024*1024 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# units are case insensitive so 1GB 1Gb 1gB are all the same.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;################################## INCLUDES ###################################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Include one or more other config files here. This is useful if you&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# have a standard template that goes to all Redis servers but also need&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to customize a few per-server settings. Include files can include&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# other files, so use this wisely.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Notice option &amp;quot;include&amp;quot; won&amp;#39;t be rewritten by command &amp;quot;CONFIG REWRITE&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# from admin or Redis Sentinel. Since Redis always uses the last processed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# line as value of a configuration directive, you&amp;#39;d better put includes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# at the beginning of this file to avoid overwriting config change at runtime.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If instead you are interested in using includes to override configuration&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# options, it is better to use include as the last line.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# include &amp;#x2F;path&amp;#x2F;to&amp;#x2F;local.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# include &amp;#x2F;path&amp;#x2F;to&amp;#x2F;other.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;################################## MODULES #####################################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Load modules at startup. If the server is not able to load modules&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# it will abort. It is possible to use multiple loadmodule directives.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# loadmodule &amp;#x2F;path&amp;#x2F;to&amp;#x2F;my_module.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# loadmodule &amp;#x2F;path&amp;#x2F;to&amp;#x2F;other_module.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;################################## NETWORK #####################################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default, if no &amp;quot;bind&amp;quot; configuration directive is specified, Redis listens&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# for connections from all the network interfaces available on the server.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# It is possible to listen to just one or multiple selected interfaces using&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the &amp;quot;bind&amp;quot; configuration directive, followed by one or more IP addresses.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Examples:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# bind 192.168.1.100 10.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# bind 127.0.0.1 ::1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# internet, binding to all the interfaces is dangerous and will expose the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# instance to everybody on the internet. So by default we uncomment the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# following bind directive, that will force Redis to listen only into&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the IPv4 loopback interface address (this means Redis will be able to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# accept connections only from clients running into the same computer it&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# is running).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# JUST COMMENT THE FOLLOWING LINE.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bind 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Protected mode is a layer of security protection, in order to avoid that&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis instances left open on the internet are accessed and exploited.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# When protected mode is on and if:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1) The server is not binding explicitly to a set of addresses using the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# &amp;quot;bind&amp;quot; directive.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 2) No password is configured.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The server only accepts connections from clients connecting from the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# sockets.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default protected mode is enabled. You should disable it only if&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# you are sure you want clients from other hosts to connect to Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# even if no authentication is configured, nor a specific set of interfaces&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# are explicitly listed using the &amp;quot;bind&amp;quot; directive.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;protected-mode no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Accept connections on the specified port, default is 6379 (IANA #815344).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If port 0 is specified Redis will not listen on a TCP socket.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;port 6379&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# TCP listen() backlog.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# In high requests-per-second environments you need an high backlog in order&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to avoid slow clients connections issues. Note that the Linux kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# will silently truncate it to the value of &amp;#x2F;proc&amp;#x2F;sys&amp;#x2F;net&amp;#x2F;core&amp;#x2F;somaxconn so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# make sure to raise both the value of somaxconn and tcp_max_syn_backlog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in order to get the desired effect.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tcp-backlog 511&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Unix socket.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Specify the path for the Unix socket that will be used to listen for&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# incoming connections. There is no default, so Redis will not listen&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# on a unix socket when not specified.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# unixsocket &amp;#x2F;tmp&amp;#x2F;redis.sock&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# unixsocketperm 700&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Close the connection after a client is idle for N seconds (0 to disable)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;timeout 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# TCP keepalive.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# of communication. This is useful for two reasons:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1) Detect dead peers.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 2) Take the connection alive from the point of view of network&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# equipment in the middle.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# On Linux, the specified value (in seconds) is the period used to send ACKs.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Note that to close the connection the double of the time is needed.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# On other kernels the period depends on the kernel configuration.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# A reasonable value for this option is 300 seconds, which is the new&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis default starting with Redis 3.2.1.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tcp-keepalive 300&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;################################# GENERAL #####################################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default Redis does not run as a daemon. Use &amp;#39;yes&amp;#39; if you need it.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Note that Redis will write a pid file in &amp;#x2F;var&amp;#x2F;run&amp;#x2F;redis.pid when daemonized.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# allkeys-random -&amp;gt; Remove a random key, any key.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# volatile-ttl -&amp;gt; Remove the key with the nearest expire time (minor TTL)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pidfile &amp;#x2F;var&amp;#x2F;run&amp;#x2F;redis_6379.pid&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;daemonize yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If you run Redis from upstart or systemd, Redis can interact with your&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# supervision tree. Options:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# supervised no - no supervision interaction&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# supervised upstart - signal upstart by putting Redis into SIGSTOP mode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# supervised systemd - signal systemd by writing READY&amp;#x3D;1 to $NOTIFY_SOCKET&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# supervised auto - detect upstart or systemd method based on&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# UPSTART_JOB or NOTIFY_SOCKET environment variables&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Note: these supervision methods only signal &amp;quot;process is ready.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# They do not enable continuous liveness pings back to your supervisor.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;supervised no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If a pid file is specified, Redis writes it where specified at startup&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# and removes it at exit.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# When the server runs non daemonized, no pid file is created if none is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# specified in the configuration. When the server is daemonized, the pid file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# is used even if not specified, defaulting to &amp;quot;&amp;#x2F;var&amp;#x2F;run&amp;#x2F;redis.pid&amp;quot;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Creating a pid file is best effort: if Redis is not able to create it&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# nothing bad happens, the server will start and run normally.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pidfile &amp;#x2F;var&amp;#x2F;run&amp;#x2F;redis_6379.pid&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Specify the server verbosity level.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This can be one of:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# debug (a lot of information, useful for development&amp;#x2F;testing)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# verbose (many rarely useful info, but not a mess like the debug level)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# notice (moderately verbose, what you want in production probably)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# warning (only very important &amp;#x2F; critical messages are logged)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;loglevel notice&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Specify the log file name. Also the empty string can be used to force&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis to log on the standard output. Note that if you use standard&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# output for logging but daemonize, logs will be sent to &amp;#x2F;dev&amp;#x2F;null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;logfile &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# To enable logging to the system logger, just set &amp;#39;syslog-enabled&amp;#39; to yes,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# and optionally update the other syslog parameters to suit your needs.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# syslog-enabled no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Specify the syslog identity.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# syslog-ident redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# syslog-facility local0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Set the number of databases. The default database is DB 0, you can select&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# a different one on a per-connection basis using SELECT &amp;lt;dbid&amp;gt; where&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# dbid is a number between 0 and &amp;#39;databases&amp;#39;-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;databases 16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default Redis shows an ASCII art logo only when started to log to the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# standard output and if the standard output is a TTY. Basically this means&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# that normally a logo is displayed only in interactive sessions.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# However it is possible to force the pre-4.0 behavior and always show a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# ASCII art logo in startup logs by setting the following option to yes.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;always-show-logo yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;################################ SNAPSHOTTING ################################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Save the DB on disk:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# save &amp;lt;seconds&amp;gt; &amp;lt;changes&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Will save the DB if both the given number of seconds and the given&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# number of write operations against the DB occurred.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# In the example below the behaviour will be to save:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# after 900 sec (15 min) if at least 1 key changed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# after 300 sec (5 min) if at least 10 keys changed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# after 60 sec if at least 10000 keys changed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Note: you can disable saving completely by commenting out all &amp;quot;save&amp;quot; lines.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# It is also possible to remove all the previously configured save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# points by adding a save directive with a single empty string argument&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# like in the following example:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# save &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;save 900 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;save 300 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;save 60 10000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default Redis will stop accepting writes if RDB snapshots are enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# (at least one save point) and the latest background save failed.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This will make the user aware (in a hard way) that data is not persisting&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# on disk properly, otherwise chances are that no one will notice and some&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# disaster will happen.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If the background saving process will start working again Redis will&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# automatically allow writes again.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# However if you have setup your proper monitoring of the Redis server&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# and persistence, you may want to disable this feature so that Redis will&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# continue to work as usual even if there are problems with disk,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# permissions, and so forth.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stop-writes-on-bgsave-error yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Compress string objects using LZF when dump .rdb databases?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# For default that&amp;#39;s set to &amp;#39;yes&amp;#39; as it&amp;#39;s almost always a win.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If you want to save some CPU in the saving child set it to &amp;#39;no&amp;#39; but&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the dataset will likely be bigger if you have compressible values or keys.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rdbcompression yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This makes the format more resistant to corruption but there is a performance&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# hit to pay (around 10%) when saving and loading RDB files, so you can disable it&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# for maximum performances.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# RDB files created with checksum disabled have a checksum of zero that will&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# tell the loading code to skip the check.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rdbchecksum yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The filename where to dump the DB&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dbfilename dump-6379.rdb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The working directory.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The DB will be written inside this directory, with the filename specified&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# above using the &amp;#39;dbfilename&amp;#39; configuration directive.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The Append Only File will also be created inside this directory.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Note that you must specify a directory here, not a file name.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir .&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;################################# REPLICATION #################################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Master-Replica replication. Use replicaof to make a Redis instance a copy of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# another Redis server. A few things to understand ASAP about Redis replication.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# +------------------+ +---------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# | Master | ---&amp;gt; | Replica |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# | (receive writes) | | (exact copy) |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# +------------------+ +---------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1) Redis replication is asynchronous, but you can configure a master to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# stop accepting writes if it appears to be not connected with at least&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# a given number of replicas.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 2) Redis replicas are able to perform a partial resynchronization with the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# master if the replication link is lost for a relatively small amount of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# time. You may want to configure the replication backlog size (see the next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# sections of this file) with a sensible value depending on your needs.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 3) Replication is automatic and does not need user intervention. After a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# network partition replicas automatically try to reconnect to masters&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# and resynchronize with them.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# replicaof &amp;lt;masterip&amp;gt; &amp;lt;masterport&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If the master is password protected (using the &amp;quot;requirepass&amp;quot; configuration&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# directive below) it is possible to tell the replica to authenticate before&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# starting the replication synchronization process, otherwise the master will&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# refuse the replica request.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# masterauth &amp;lt;master-password&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# When a replica loses its connection with the master, or when the replication&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# is still in progress, the replica can act in two different ways:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1) if replica-serve-stale-data is set to &amp;#39;yes&amp;#39; (the default) the replica will&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# still reply to client requests, possibly with out of date data, or the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# data set may just be empty if this is the first synchronization.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 2) if replica-serve-stale-data is set to &amp;#39;no&amp;#39; the replica will reply with&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# an error &amp;quot;SYNC with master in progress&amp;quot; to all the kind of commands&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# but to INFO, replicaOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# SUBSCRIBE, UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# COMMAND, POST, HOST: and LATENCY.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;replica-serve-stale-data yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# You can configure a replica instance to accept writes or not. Writing against&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# a replica instance may be useful to store some ephemeral data (because data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# written on a replica will be easily deleted after resync with the master) but&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# may also cause problems if clients are writing to it because of a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# misconfiguration.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Since Redis 2.6 by default replicas are read-only.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Note: read only replicas are not designed to be exposed to untrusted clients&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# on the internet. It&amp;#39;s just a protection layer against misuse of the instance.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Still a read only replica exports by default all the administrative commands&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# such as CONFIG, DEBUG, and so forth. To a limited extent you can improve&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# security of read only replicas using &amp;#39;rename-command&amp;#39; to shadow all the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# administrative &amp;#x2F; dangerous commands.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;replica-read-only yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Replication SYNC strategy: disk or socket.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# -------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# WARNING: DISKLESS REPLICATION IS EXPERIMENTAL CURRENTLY&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# -------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# New replicas and reconnecting replicas that are not able to continue the replication&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# process just receiving differences, need to do what is called a &amp;quot;full&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# synchronization&amp;quot;. An RDB file is transmitted from the master to the replicas.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The transmission can happen in two different ways:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1) Disk-backed: The Redis master creates a new process that writes the RDB&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# file on disk. Later the file is transferred by the parent&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# process to the replicas incrementally.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 2) Diskless: The Redis master creates a new process that directly writes the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# RDB file to replica sockets, without touching the disk at all.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# With disk-backed replication, while the RDB file is generated, more replicas&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# can be queued and served with the RDB file as soon as the current child producing&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the RDB file finishes its work. With diskless replication instead once&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the transfer starts, new replicas arriving will be queued and a new transfer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# will start when the current one terminates.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# When diskless replication is used, the master waits a configurable amount of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# time (in seconds) before starting the transfer in the hope that multiple replicas&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# will arrive and the transfer can be parallelized.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# With slow disks and fast (large bandwidth) networks, diskless replication&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# works better.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;repl-diskless-sync no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# When diskless replication is enabled, it is possible to configure the delay&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the server waits in order to spawn the child that transfers the RDB via socket&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to the replicas.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This is important since once the transfer starts, it is not possible to serve&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# new replicas arriving, that will be queued for the next RDB transfer, so the server&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# waits a delay in order to let more replicas arrive.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The delay is specified in seconds, and by default is 5 seconds. To disable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# it entirely just set it to 0 seconds and the transfer will start ASAP.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;repl-diskless-sync-delay 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Replicas send PINGs to server in a predefined interval. It&amp;#39;s possible to change&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# this interval with the repl_ping_replica_period option. The default value is 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# seconds.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# repl-ping-replica-period 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The following option sets the replication timeout for:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1) Bulk transfer I&amp;#x2F;O during SYNC, from the point of view of replica.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 2) Master timeout from the point of view of replicas (data, pings).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 3) Replica timeout from the point of view of masters (REPLCONF ACK pings).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# It is important to make sure that this value is greater than the value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# specified for repl-ping-replica-period otherwise a timeout will be detected&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# every time there is low traffic between the master and the replica.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# repl-timeout 60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Disable TCP_NODELAY on the replica socket after SYNC?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If you select &amp;quot;yes&amp;quot; Redis will use a smaller number of TCP packets and&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# less bandwidth to send data to replicas. But this can add a delay for&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the data to appear on the replica side, up to 40 milliseconds with&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Linux kernels using a default configuration.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If you select &amp;quot;no&amp;quot; the delay for data to appear on the replica side will&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# be reduced but more bandwidth will be used for replication.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default we optimize for low latency, but in very high traffic conditions&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# or when the master and replicas are many hops away, turning this to &amp;quot;yes&amp;quot; may&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# be a good idea.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;repl-disable-tcp-nodelay no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Set the replication backlog size. The backlog is a buffer that accumulates&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# replica data when replicas are disconnected for some time, so that when a replica&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# wants to reconnect again, often a full resync is not needed, but a partial&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# resync is enough, just passing the portion of data the replica missed while&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# disconnected.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The bigger the replication backlog, the longer the time the replica can be&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# disconnected and later be able to perform a partial resynchronization.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The backlog is only allocated once there is at least a replica connected.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# repl-backlog-size 1mb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# After a master has no longer connected replicas for some time, the backlog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# will be freed. The following option configures the amount of seconds that&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# need to elapse, starting from the time the last replica disconnected, for&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the backlog buffer to be freed.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Note that replicas never free the backlog for timeout, since they may be&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# promoted to masters later, and should be able to correctly &amp;quot;partially&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# resynchronize&amp;quot; with the replicas: hence they should always accumulate backlog.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# A value of 0 means to never release the backlog.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# repl-backlog-ttl 3600&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The replica priority is an integer number published by Redis in the INFO output.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# It is used by Redis Sentinel in order to select a replica to promote into a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# master if the master is no longer working correctly.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# A replica with a low priority number is considered better for promotion, so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# for instance if there are three replicas with priority 10, 100, 25 Sentinel will&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# pick the one with priority 10, that is the lowest.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# However a special priority of 0 marks the replica as not able to perform the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# role of master, so a replica with priority of 0 will never be selected by&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis Sentinel for promotion.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default the priority is 100.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;replica-priority 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# It is possible for a master to stop accepting writes if there are less than&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# N replicas connected, having a lag less or equal than M seconds.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The N replicas need to be in &amp;quot;online&amp;quot; state.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The lag in seconds, that must be &amp;lt;&amp;#x3D; the specified value, is calculated from&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the last ping received from the replica, that is usually sent every second.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This option does not GUARANTEE that N replicas will accept the write, but&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# will limit the window of exposure for lost writes in case not enough replicas&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# are available, to the specified number of seconds.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# For example to require at least 3 replicas with a lag &amp;lt;&amp;#x3D; 10 seconds use:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# min-replicas-to-write 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# min-replicas-max-lag 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Setting one or the other to 0 disables the feature.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default min-replicas-to-write is set to 0 (feature disabled) and&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# min-replicas-max-lag is set to 10.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# A Redis master is able to list the address and port of the attached&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# replicas in different ways. For example the &amp;quot;INFO replication&amp;quot; section&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# offers this information, which is used, among other tools, by&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis Sentinel in order to discover replica instances.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Another place where this info is available is in the output of the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# &amp;quot;ROLE&amp;quot; command of a master.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The listed IP and address normally reported by a replica is obtained&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in the following way:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# IP: The address is auto detected by checking the peer address&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# of the socket used by the replica to connect with the master.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Port: The port is communicated by the replica during the replication&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# handshake, and is normally the port that the replica is using to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# listen for connections.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# However when port forwarding or Network Address Translation (NAT) is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# used, the replica may be actually reachable via different IP and port&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# pairs. The following two options can be used by a replica in order to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# report to its master a specific set of IP and port, so that both INFO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# and ROLE will report those values.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# There is no need to use both the options if you need to override just&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the port or the IP address.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# replica-announce-ip 5.5.5.5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# replica-announce-port 1234&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;################################## SECURITY ###################################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Require clients to issue AUTH &amp;lt;PASSWORD&amp;gt; before processing any other&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# commands. This might be useful in environments in which you do not trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# others with access to the host running redis-server.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This should stay commented out for backward compatibility and because most&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# people do not need auth (e.g. they run their own servers).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Warning: since Redis is pretty fast an outside user can try up to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 150k passwords per second against a good box. This means that you should&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# use a very strong password otherwise it will be very easy to break.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# requirepass foobared&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Command renaming.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# It is possible to change the name of dangerous commands in a shared&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# environment. For instance the CONFIG command may be renamed into something&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# hard to guess so that it will still be available for internal-use tools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# but not available for general clients.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Example:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# It is also possible to completely kill a command by renaming it into&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# an empty string:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# rename-command CONFIG &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Please note that changing the name of commands that are logged into the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# AOF file or transmitted to replicas may cause problems.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;################################### CLIENTS ####################################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Set the max number of connected clients at the same time. By default&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# this limit is set to 10000 clients, however if the Redis server is not&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# able to configure the process file limit to allow for the specified limit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the max number of allowed clients is set to the current file limit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# minus 32 (as Redis reserves a few file descriptors for internal uses).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Once the limit is reached Redis will close all the new connections sending&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# an error &amp;#39;max number of clients reached&amp;#39;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# maxclients 10000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;############################## MEMORY MANAGEMENT ################################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Set a memory usage limit to the specified amount of bytes.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# When the memory limit is reached Redis will try to remove keys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# according to the eviction policy selected (see maxmemory-policy).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If Redis can&amp;#39;t remove keys according to the policy, or if the policy is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# set to &amp;#39;noeviction&amp;#39;, Redis will start to reply with errors to commands&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# that would use more memory, like SET, LPUSH, and so on, and will continue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to reply to read-only commands like GET.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This option is usually useful when using Redis as an LRU or LFU cache, or to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# set a hard memory limit for an instance (using the &amp;#39;noeviction&amp;#39; policy).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# WARNING: If you have replicas attached to an instance with maxmemory on,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the size of the output buffers needed to feed the replicas are subtracted&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# from the used memory count, so that network problems &amp;#x2F; resyncs will&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# not trigger a loop where keys are evicted, and in turn the output&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# buffer of replicas is full with DELs of keys evicted triggering the deletion&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# of more keys, and so forth until the database is completely emptied.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# In short... if you have replicas attached it is suggested that you set a lower&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# limit for maxmemory so that there is some free RAM on the system for replica&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# output buffers (but this is not needed if the policy is &amp;#39;noeviction&amp;#39;).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# maxmemory &amp;lt;bytes&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# is reached. You can select among five behaviors:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# volatile-lru -&amp;gt; Evict using approximated LRU among the keys with an expire set.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# allkeys-lru -&amp;gt; Evict any key using approximated LRU.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# volatile-lfu -&amp;gt; Evict using approximated LFU among the keys with an expire set.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# allkeys-lfu -&amp;gt; Evict any key using approximated LFU.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# volatile-random -&amp;gt; Remove a random key among the ones with an expire set.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# noeviction -&amp;gt; Don&amp;#39;t evict anything, just return an error on write operations.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# LRU means Least Recently Used&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# LFU means Least Frequently Used&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Both LRU, LFU and volatile-ttl are implemented using approximated&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# randomized algorithms.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Note: with any of the above policies, Redis will return an error on write&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# operations, when there are no suitable keys for eviction.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# At the date of writing these commands are: set setnx setex append&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# getset mset msetnx exec sort&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The default is:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# maxmemory-policy noeviction&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# algorithms (in order to save memory), so you can tune it for speed or&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# accuracy. For default Redis will check five keys and pick the one that was&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# used less recently, you can change the sample size using the following&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# configuration directive.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The default of 5 produces good enough results. 10 Approximates very closely&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# true LRU but costs more CPU. 3 is faster but not very accurate.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# maxmemory-samples 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Starting from Redis 5, by default a replica will ignore its maxmemory setting&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# (unless it is promoted to master after a failover or manually). It means&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# that the eviction of keys will be just handled by the master, sending the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# DEL commands to the replica as keys evict in the master side.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This behavior ensures that masters and replicas stay consistent, and is usually&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# what you want, however if your replica is writable, or you want the replica to have&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# a different memory setting, and you are sure all the writes performed to the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# replica are idempotent, then you may change this default (but be sure to understand&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# what you are doing).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Note that since the replica by default does not evict, it may end using more&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# memory than the one set via maxmemory (there are certain buffers that may&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# be larger on the replica, or data structures may sometimes take more memory and so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# forth). So make sure you monitor your replicas and make sure they have enough&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# memory to never hit a real out-of-memory condition before the master hits&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the configured maxmemory setting.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# replica-ignore-maxmemory yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;############################# LAZY FREEING ####################################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis has two primitives to delete keys. One is called DEL and is a blocking&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# deletion of the object. It means that the server stops processing new commands&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in order to reclaim all the memory associated with an object in a synchronous&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# way. If the key deleted is associated with a small object, the time needed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in order to execute the DEL command is very small and comparable to most other&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# O(1) or O(log_N) commands in Redis. However if the key is associated with an&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# aggregated value containing millions of elements, the server can block for&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# a long time (even seconds) in order to complete the operation.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# For the above reasons Redis also offers non blocking deletion primitives&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# FLUSHDB commands, in order to reclaim memory in background. Those commands&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# are executed in constant time. Another thread will incrementally free the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# object in the background as fast as possible.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# It&amp;#39;s up to the design of the application to understand when it is a good&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# idea to use one or the other. However the Redis server sometimes has to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# delete keys or flush the whole database as a side effect of other operations.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Specifically Redis deletes objects independently of a user call in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# following scenarios:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1) On eviction, because of the maxmemory and maxmemory policy configurations,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in order to make room for new data, without going over the specified&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# memory limit.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 2) Because of expire: when a key with an associated time to live (see the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# EXPIRE command) must be deleted from memory.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 3) Because of a side effect of a command that stores data on a key that may&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# already exist. For example the RENAME command may delete the old key&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# content when it is replaced with another one. Similarly SUNIONSTORE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# or SORT with STORE option may delete existing keys. The SET command&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# itself removes any old content of the specified key in order to replace&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# it with the specified string.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 4) During replication, when a replica performs a full resynchronization with&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# its master, the content of the whole database is removed in order to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# load the RDB file just transferred.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# In all the above cases the default is to delete objects in a blocking way,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# like if DEL was called. However you can configure each case specifically&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in order to instead release memory in a non-blocking way like if UNLINK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# was called, using the following configuration directives:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lazyfree-lazy-eviction no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lazyfree-lazy-expire no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lazyfree-lazy-server-del no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;replica-lazy-flush no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;############################## APPEND ONLY MODE ###############################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default Redis asynchronously dumps the dataset on disk. This mode is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# good enough in many applications, but an issue with the Redis process or&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# a power outage may result into a few minutes of writes lost (depending on&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the configured save points).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The Append Only File is an alternative persistence mode that provides&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# much better durability. For instance using the default data fsync policy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# (see later in the config file) Redis can lose just one second of writes in a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# dramatic event like a server power outage, or a single write if something&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# wrong with the Redis process itself happens, but the operating system is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# still running correctly.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# AOF and RDB persistence can be enabled at the same time without problems.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If the AOF is enabled on startup Redis will load the AOF, that is the file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# with the better durability guarantees.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Please check http:&amp;#x2F;&amp;#x2F;redis.io&amp;#x2F;topics&amp;#x2F;persistence for more information.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;appendonly no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The name of the append only file (default: &amp;quot;appendonly.aof&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;appendfilename &amp;quot;appendonly.aof&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The fsync() call tells the Operating System to actually write data on disk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# instead of waiting for more data in the output buffer. Some OS will really flush&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# data on disk, some other OS will just try to do it ASAP.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis supports three different modes:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# no: don&amp;#39;t fsync, just let the OS flush the data when it wants. Faster.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# always: fsync after every write to the append only log. Slow, Safest.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# everysec: fsync only one time every second. Compromise.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The default is &amp;quot;everysec&amp;quot;, as that&amp;#39;s usually the right compromise between&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# speed and data safety. It&amp;#39;s up to you to understand if you can relax this to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# &amp;quot;no&amp;quot; that will let the operating system flush the output buffer when&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# it wants, for better performances (but if you can live with the idea of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# some data loss consider the default persistence mode that&amp;#39;s snapshotting),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# or on the contrary, use &amp;quot;always&amp;quot; that&amp;#39;s very slow but a bit safer than&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# everysec.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# More details please check the following article:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# http:&amp;#x2F;&amp;#x2F;antirez.com&amp;#x2F;post&amp;#x2F;redis-persistence-demystified.html&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If unsure, use &amp;quot;everysec&amp;quot;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# appendfsync always&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;appendfsync everysec&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# appendfsync no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# When the AOF fsync policy is set to always or everysec, and a background&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# saving process (a background save or AOF log background rewriting) is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# performing a lot of I&amp;#x2F;O against the disk, in some Linux configurations&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis may block too long on the fsync() call. Note that there is no fix for&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# this currently, as even performing fsync in a different thread will block&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# our synchronous write(2) call.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# In order to mitigate this problem it&amp;#39;s possible to use the following option&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# that will prevent fsync() from being called in the main process while a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# BGSAVE or BGREWRITEAOF is in progress.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This means that while another child is saving, the durability of Redis is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the same as &amp;quot;appendfsync none&amp;quot;. In practical terms, this means that it is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# possible to lose up to 30 seconds of log in the worst scenario (with the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# default Linux settings).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If you have latency problems turn this to &amp;quot;yes&amp;quot;. Otherwise leave it as&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# &amp;quot;no&amp;quot; that is the safest pick from the point of view of durability.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;no-appendfsync-on-rewrite no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Automatic rewrite of the append only file.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis is able to automatically rewrite the log file implicitly calling&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# BGREWRITEAOF when the AOF log size grows by the specified percentage.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This is how it works: Redis remembers the size of the AOF file after the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# latest rewrite (if no rewrite has happened since the restart, the size of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the AOF at startup is used).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This base size is compared to the current size. If the current size is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# bigger than the specified percentage, the rewrite is triggered. Also&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# you need to specify a minimal size for the AOF file to be rewritten, this&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# is useful to avoid rewriting the AOF file even if the percentage increase&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# is reached but it is still pretty small.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Specify a percentage of zero in order to disable the automatic AOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# rewrite feature.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;auto-aof-rewrite-percentage 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;auto-aof-rewrite-min-size 64mb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# An AOF file may be found to be truncated at the end during the Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# startup process, when the AOF data gets loaded back into memory.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This may happen when the system where Redis is running&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# crashes, especially when an ext4 filesystem is mounted without the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# data&amp;#x3D;ordered option (however this can&amp;#39;t happen when Redis itself&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# crashes or aborts but the operating system still works correctly).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis can either exit with an error when this happens, or load as much&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# data as possible (the default now) and start if the AOF file is found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to be truncated at the end. The following option controls this behavior.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If aof-load-truncated is set to yes, a truncated AOF file is loaded and&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the Redis server starts emitting a log to inform the user of the event.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Otherwise if the option is set to no, the server aborts with an error&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# and refuses to start. When the option is set to no, the user requires&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to fix the AOF file using the &amp;quot;redis-check-aof&amp;quot; utility before to restart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the server.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Note that if the AOF file will be found to be corrupted in the middle&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the server will still exit with an error. This option only applies when&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis will try to read more data from the AOF file but not enough bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# will be found.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aof-load-truncated yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# When rewriting the AOF file, Redis is able to use an RDB preamble in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# AOF file for faster rewrites and recoveries. When this option is turned&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# on the rewritten AOF file is composed of two different stanzas:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# [RDB file][AOF tail]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# When loading Redis recognizes that the AOF file starts with the &amp;quot;REDIS&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# string and loads the prefixed RDB file, and continues loading the AOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# tail.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aof-use-rdb-preamble yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;################################ LUA SCRIPTING ###############################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Max execution time of a Lua script in milliseconds.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If the maximum execution time is reached Redis will log that a script is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# still in execution after the maximum allowed time and will start to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# reply to queries with an error.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# When a long running script exceeds the maximum execution time only the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# used to stop a script that did not yet called write commands. The second&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# is the only way to shut down the server in the case a write command was&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# already issued by the script but the user doesn&amp;#39;t want to wait for the natural&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# termination of the script.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Set it to 0 or a negative value for unlimited execution without warnings.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lua-time-limit 5000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;################################ REDIS CLUSTER ###############################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Normal Redis instances can&amp;#39;t be part of a Redis Cluster; only nodes that are&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# started as cluster nodes can. In order to start a Redis instance as a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# cluster node enable the cluster support uncommenting the following:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cluster-enabled yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Every cluster node has a cluster configuration file. This file is not&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# intended to be edited by hand. It is created and updated by Redis nodes.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Every Redis Cluster node requires a different cluster configuration file.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Make sure that instances running in the same system do not have&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# overlapping cluster configuration file names.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cluster-config-file nodes-6379.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Cluster node timeout is the amount of milliseconds a node must be unreachable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# for it to be considered in failure state.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Most other internal time limits are multiple of the node timeout.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cluster-node-timeout 15000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# A replica of a failing master will avoid to start a failover if its data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# looks too old.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# There is no simple way for a replica to actually have an exact measure of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# its &amp;quot;data age&amp;quot;, so the following two checks are performed:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1) If there are multiple replicas able to failover, they exchange messages&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in order to try to give an advantage to the replica with the best&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# replication offset (more data from the master processed).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Replicas will try to get their rank by offset, and apply to the start&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# of the failover a delay proportional to their rank.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 2) Every single replica computes the time of the last interaction with&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# its master. This can be the last ping or command received (if the master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# is still in the &amp;quot;connected&amp;quot; state), or the time that elapsed since the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# disconnection with the master (if the replication link is currently down).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If the last interaction is too old, the replica will not try to failover&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# at all.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The point &amp;quot;2&amp;quot; can be tuned by user. Specifically a replica will not perform&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the failover if, since the last interaction with the master, the time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# elapsed is greater than:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# (node-timeout * replica-validity-factor) + repl-ping-replica-period&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# So for example if node-timeout is 30 seconds, and the replica-validity-factor&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# is 10, and assuming a default repl-ping-replica-period of 10 seconds, the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# replica will not try to failover if it was not able to talk with the master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# for longer than 310 seconds.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# A large replica-validity-factor may allow replicas with too old data to failover&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# a master, while a too small value may prevent the cluster from being able to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# elect a replica at all.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# For maximum availability, it is possible to set the replica-validity-factor&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to a value of 0, which means, that replicas will always try to failover the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# master regardless of the last time they interacted with the master.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# (However they&amp;#39;ll always try to apply a delay proportional to their&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# offset rank).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Zero is the only value able to guarantee that when all the partitions heal&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the cluster will always be able to continue.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# cluster-replica-validity-factor 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Cluster replicas are able to migrate to orphaned masters, that are masters&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# that are left without working replicas. This improves the cluster ability&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to resist to failures as otherwise an orphaned master can&amp;#39;t be failed over&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in case of failure if it has no working replicas.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Replicas migrate to orphaned masters only if there are still at least a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# given number of other working replicas for their old master. This number&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# is the &amp;quot;migration barrier&amp;quot;. A migration barrier of 1 means that a replica&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# will migrate only if there is at least 1 other working replica for its master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# and so forth. It usually reflects the number of replicas you want for every&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# master in your cluster.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Default is 1 (replicas migrate only if their masters remain with at least&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# one replica). To disable migration just set it to a very large value.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# A value of 0 can be set but is useful only for debugging and dangerous&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in production.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# cluster-migration-barrier 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default Redis Cluster nodes stop accepting queries if they detect there&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# is at least an hash slot uncovered (no available node is serving it).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This way if the cluster is partially down (for example a range of hash slots&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# are no longer covered) all the cluster becomes, eventually, unavailable.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# It automatically returns available as soon as all the slots are covered again.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# However sometimes you want the subset of the cluster which is working,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to continue to accept queries for the part of the key space that is still&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# covered. In order to do so, just set the cluster-require-full-coverage&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# option to no.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# cluster-require-full-coverage yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This option, when set to yes, prevents replicas from trying to failover its&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# master during master failures. However the master can still perform a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# manual failover, if forced to do so.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This is useful in different scenarios, especially in the case of multiple&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# data center operations, where we want one side to never be promoted if not&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in the case of a total DC failure.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# cluster-replica-no-failover no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# In order to setup your cluster make sure to read the documentation&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# available at http:&amp;#x2F;&amp;#x2F;redis.io web site.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;########################## CLUSTER DOCKER&amp;#x2F;NAT support ########################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# In certain deployments, Redis Cluster nodes address discovery fails, because&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# addresses are NAT-ted or because ports are forwarded (the typical case is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Docker and other containers).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# In order to make Redis Cluster working in such environments, a static&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# configuration where each node knows its public address is needed. The&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# following two options are used for this scope, and are:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# * cluster-announce-ip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# * cluster-announce-port&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# * cluster-announce-bus-port&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Each instruct the node about its address, client port, and cluster message&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# bus port. The information is then published in the header of the bus packets&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# so that other nodes will be able to correctly map the address of the node&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# publishing the information.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If the above options are not used, the normal Redis Cluster auto-detection&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# will be used instead.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Note that when remapped, the bus port may not be at the fixed offset of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# clients port + 10000, so you can specify any port and bus-port depending&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# on how they get remapped. If the bus-port is not set, a fixed offset of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 10000 will be used as usually.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Example:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# cluster-announce-ip 10.1.1.5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# cluster-announce-port 6379&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# cluster-announce-bus-port 6380&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;################################## SLOW LOG ###################################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The Redis Slow Log is a system to log queries that exceeded a specified&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# execution time. The execution time does not include the I&amp;#x2F;O operations&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# like talking with the client, sending the reply and so forth,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# but just the time needed to actually execute the command (this is the only&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# stage of command execution where the thread is blocked and can not serve&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# other requests in the meantime).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# You can configure the slow log with two parameters: one tells Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# what is the execution time, in microseconds, to exceed in order for the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# command to get logged, and the other parameter is the length of the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# slow log. When a new command is logged the oldest one is removed from the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# queue of logged commands.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The following time is expressed in microseconds, so 1000000 is equivalent&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to one second. Note that a negative number disables the slow log, while&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# a value of zero forces the logging of every command.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;slowlog-log-slower-than 10000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# There is no limit to this length. Just be aware that it will consume memory.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# You can reclaim memory used by the slow log with SLOWLOG RESET.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;slowlog-max-len 128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;################################ LATENCY MONITOR ##############################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The Redis latency monitoring subsystem samples different operations&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# at runtime in order to collect data related to possible sources of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# latency of a Redis instance.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Via the LATENCY command this information is available to the user that can&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# print graphs and obtain reports.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The system only logs operations that were performed in a time equal or&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# greater than the amount of milliseconds specified via the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# latency-monitor-threshold configuration directive. When its value is set&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to zero, the latency monitor is turned off.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default latency monitoring is disabled since it is mostly not needed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# if you don&amp;#39;t have latency issues, and collecting data has a performance&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# impact, that while very small, can be measured under big load. Latency&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# monitoring can easily be enabled at runtime using the command&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# &amp;quot;CONFIG SET latency-monitor-threshold &amp;lt;milliseconds&amp;gt;&amp;quot; if needed.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;latency-monitor-threshold 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;############################# EVENT NOTIFICATION ##############################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis can notify Pub&amp;#x2F;Sub clients about events happening in the key space.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This feature is documented at http:&amp;#x2F;&amp;#x2F;redis.io&amp;#x2F;topics&amp;#x2F;notifications&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# For instance if keyspace events notification is enabled, and a client&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# performs a DEL operation on key &amp;quot;foo&amp;quot; stored in the Database 0, two&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# messages will be published via Pub&amp;#x2F;Sub:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# PUBLISH __keyspace@0__:foo del&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# PUBLISH __keyevent@0__:del foo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# It is possible to select the events that Redis will notify among a set&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# of classes. Every class is identified by a single character:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# K Keyspace events, published with __keyspace@&amp;lt;db&amp;gt;__ prefix.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# E Keyevent events, published with __keyevent@&amp;lt;db&amp;gt;__ prefix.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# g Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# $ String commands&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# l List commands&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# s Set commands&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# h Hash commands&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# z Sorted set commands&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# x Expired events (events generated every time a key expires)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# e Evicted events (events generated when a key is evicted for maxmemory)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# A Alias for g$lshzxe, so that the &amp;quot;AKE&amp;quot; string means all the events.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The &amp;quot;notify-keyspace-events&amp;quot; takes as argument a string that is composed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# of zero or multiple characters. The empty string means that notifications&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# are disabled.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Example: to enable list and generic events, from the point of view of the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# event name, use:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# notify-keyspace-events Elg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Example 2: to get the stream of the expired keys subscribing to channel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# name __keyevent@0__:expired use:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# notify-keyspace-events Ex&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default all notifications are disabled because most users don&amp;#39;t need&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# this feature and the feature has some overhead. Note that if you don&amp;#39;t&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# specify at least one of K or E, no events will be delivered.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;notify-keyspace-events &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;############################### ADVANCED CONFIG ###############################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Hashes are encoded using a memory efficient data structure when they have a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# small number of entries, and the biggest entry does not exceed a given&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# threshold. These thresholds can be configured using the following directives.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hash-max-ziplist-entries 512&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hash-max-ziplist-value 64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Lists are also encoded in a special way to save a lot of space.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The number of entries allowed per internal list node can be specified&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# as a fixed maximum size or a maximum number of elements.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# For a fixed maximum size, use -5 through -1, meaning:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# -5: max size: 64 Kb &amp;lt;-- not recommended for normal workloads&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# -4: max size: 32 Kb &amp;lt;-- not recommended&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# -3: max size: 16 Kb &amp;lt;-- probably not recommended&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# -2: max size: 8 Kb &amp;lt;-- good&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# -1: max size: 4 Kb &amp;lt;-- good&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Positive numbers mean store up to _exactly_ that number of elements&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# per list node.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# but if your use case is unique, adjust the settings as necessary.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list-max-ziplist-size -2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Lists may also be compressed.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Compress depth is the number of quicklist ziplist nodes from *each* side of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the list to *exclude* from compression. The head and tail of the list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# are always uncompressed for fast push&amp;#x2F;pop operations. Settings are:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 0: disable all list compression&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1: depth 1 means &amp;quot;don&amp;#39;t start compressing until after 1 node into the list,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# going from either the head or tail&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# So: [head]-&amp;gt;node-&amp;gt;node-&amp;gt;...-&amp;gt;node-&amp;gt;[tail]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# [head], [tail] will always be uncompressed; inner nodes will compress.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 2: [head]-&amp;gt;[next]-&amp;gt;node-&amp;gt;node-&amp;gt;...-&amp;gt;node-&amp;gt;[prev]-&amp;gt;[tail]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 2 here means: don&amp;#39;t compress head or head-&amp;gt;next or tail-&amp;gt;prev or tail,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# but compress all nodes between them.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 3: [head]-&amp;gt;[next]-&amp;gt;[next]-&amp;gt;node-&amp;gt;node-&amp;gt;...-&amp;gt;node-&amp;gt;[prev]-&amp;gt;[prev]-&amp;gt;[tail]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# etc.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list-compress-depth 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Sets have a special encoding in just one case: when a set is composed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# of just strings that happen to be integers in radix 10 in the range&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# of 64 bit signed integers.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The following configuration setting sets the limit in the size of the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# set in order to use this special memory saving encoding.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set-max-intset-entries 512&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Similarly to hashes and lists, sorted sets are also specially encoded in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# order to save a lot of space. This encoding is only used when the length and&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# elements of a sorted set are below the following limits:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;zset-max-ziplist-entries 128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;zset-max-ziplist-value 64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# HyperLogLog sparse representation bytes limit. The limit includes the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 16 bytes header. When an HyperLogLog using the sparse representation crosses&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# this limit, it is converted into the dense representation.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# A value greater than 16000 is totally useless, since at that point the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# dense representation is more memory efficient.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The suggested value is ~ 3000 in order to have the benefits of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the space efficient encoding without slowing down too much PFADD,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# which is O(N) with the sparse encoding. The value can be raised to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# ~ 10000 when CPU is not a concern, but space is, and the data set is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# composed of many HyperLogLogs with cardinality in the 0 - 15000 range.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hll-sparse-max-bytes 3000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Streams macro node max size &amp;#x2F; items. The stream data structure is a radix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# tree of big nodes that encode multiple items inside. Using this configuration&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# it is possible to configure how big a single node can be in bytes, and the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# maximum number of items it may contain before switching to a new node when&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# appending new stream entries. If any of the following settings are set to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# zero, the limit is ignored, so for instance it is possible to set just a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# max entires limit by setting max-bytes to 0 and max-entries to the desired&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# value.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stream-node-max-bytes 4096&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stream-node-max-entries 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# order to help rehashing the main Redis hash table (the one mapping top-level&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# keys to values). The hash table implementation Redis uses (see dict.c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# performs a lazy rehashing: the more operation you run into a hash table&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# that is rehashing, the more rehashing &amp;quot;steps&amp;quot; are performed, so if the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# server is idle the rehashing is never complete and some more memory is used&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# by the hash table.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The default is to use this millisecond 10 times every second in order to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# actively rehash the main dictionaries, freeing memory when possible.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# If unsure:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# use &amp;quot;activerehashing no&amp;quot; if you have hard latency requirements and it is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# not a good thing in your environment that Redis can reply from time to time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to queries with 2 milliseconds delay.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# use &amp;quot;activerehashing yes&amp;quot; if you don&amp;#39;t have such hard requirements but&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# want to free memory asap when possible.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;activerehashing yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The client output buffer limits can be used to force disconnection of clients&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# that are not reading data from the server fast enough for some reason (a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# common reason is that a Pub&amp;#x2F;Sub client can&amp;#39;t consume messages as fast as the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# publisher can produce them).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The limit can be set differently for the three different classes of clients:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# normal -&amp;gt; normal clients including MONITOR clients&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# replica -&amp;gt; replica clients&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# pubsub -&amp;gt; clients subscribed to at least one pubsub channel or pattern&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The syntax of every client-output-buffer-limit directive is the following:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# client-output-buffer-limit &amp;lt;class&amp;gt; &amp;lt;hard limit&amp;gt; &amp;lt;soft limit&amp;gt; &amp;lt;soft seconds&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# A client is immediately disconnected once the hard limit is reached, or if&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the soft limit is reached and remains reached for the specified number of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# seconds (continuously).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# So for instance if the hard limit is 32 megabytes and the soft limit is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 16 megabytes &amp;#x2F; 10 seconds, the client will get disconnected immediately&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# if the size of the output buffers reach 32 megabytes, but will also get&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# disconnected if the client reaches 16 megabytes and continuously overcomes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the limit for 10 seconds.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default normal clients are not limited because they don&amp;#39;t receive data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# without asking (in a push way), but just after a request, so only&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# asynchronous clients may create a scenario where data is requested faster&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# than it can read.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Instead there is a default limit for pubsub and replica clients, since&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# subscribers and replicas receive data in a push fashion.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Both the hard or the soft limit can be disabled by setting them to zero.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;client-output-buffer-limit normal 0 0 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;client-output-buffer-limit replica 256mb 64mb 60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;client-output-buffer-limit pubsub 32mb 8mb 60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Client query buffers accumulate new commands. They are limited to a fixed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# amount by default in order to avoid that a protocol desynchronization (for&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# instance due to a bug in the client) will lead to unbound memory usage in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the query buffer. However you can configure it here if you have very special&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# needs, such us huge multi&amp;#x2F;exec requests or alike.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# client-query-buffer-limit 1gb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# In the Redis protocol, bulk requests, that are, elements representing single&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# strings, are normally limited ot 512 mb. However you can change this limit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# here.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# proto-max-bulk-len 512mb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis calls an internal function to perform many background tasks, like&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# closing connections of clients in timeout, purging expired keys that are&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# never requested, and so forth.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Not all tasks are performed with the same frequency, but Redis checks for&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# tasks to perform according to the specified &amp;quot;hz&amp;quot; value.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# By default &amp;quot;hz&amp;quot; is set to 10. Raising the value will use more CPU when&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis is idle, but at the same time will make Redis more responsive when&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# there are many keys expiring at the same time, and timeouts may be&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# handled with more precision.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The range is between 1 and 500, however a value over 100 is usually not&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# a good idea. Most users should use the default of 10 and raise this up to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 100 only in environments where very low latency is required.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hz 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Normally it is useful to have an HZ value which is proportional to the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# number of clients connected. This is useful in order, for instance, to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# avoid too many clients are processed for each background task invocation&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in order to avoid latency spikes.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Since the default HZ value by default is conservatively set to 10, Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# offers, and enables by default, the ability to use an adaptive HZ value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# which will temporary raise when there are many connected clients.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# When dynamic HZ is enabled, the actual configured HZ will be used as&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# as a baseline, but multiples of the configured HZ value will be actually&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# used as needed once more clients are connected. In this way an idle&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# instance will use very little CPU time while a busy instance will be&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# more responsive.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dynamic-hz yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# When a child rewrites the AOF file, if the following option is enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the file will be fsync-ed every 32 MB of data generated. This is useful&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in order to commit the file to the disk more incrementally and avoid&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# big latency spikes.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aof-rewrite-incremental-fsync yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# When redis saves RDB file, if the following option is enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the file will be fsync-ed every 32 MB of data generated. This is useful&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in order to commit the file to the disk more incrementally and avoid&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# big latency spikes.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rdb-save-incremental-fsync yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Redis LFU eviction (see maxmemory setting) can be tuned. However it is a good&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# idea to start with the default settings and only change them after investigating&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# how to improve the performances and how the keys LFU change over time, which&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# is possible to inspect via the OBJECT FREQ command.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# There are two tunable parameters in the Redis LFU implementation: the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# counter logarithm factor and the counter decay time. It is important to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# understand what the two parameters mean before changing them.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The LFU counter is just 8 bits per key, it&amp;#39;s maximum value is 255, so Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# uses a probabilistic increment with logarithmic behavior. Given the value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# of the old counter, when a key is accessed, the counter is incremented in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# this way:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1. A random number R between 0 and 1 is extracted.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 2. A probability P is calculated as 1&amp;#x2F;(old_value*lfu_log_factor+1).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 3. The counter is incremented only if R &amp;lt; P.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The default lfu-log-factor is 10. This is a table of how the frequency&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# counter changes with a different number of accesses with different&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# logarithmic factors:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# +--------+------------+------------+------------+------------+------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# | factor | 100 hits | 1000 hits | 100K hits | 1M hits | 10M hits |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# +--------+------------+------------+------------+------------+------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# | 0 | 104 | 255 | 255 | 255 | 255 |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# +--------+------------+------------+------------+------------+------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# | 1 | 18 | 49 | 255 | 255 | 255 |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# +--------+------------+------------+------------+------------+------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# | 10 | 10 | 18 | 142 | 255 | 255 |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# +--------+------------+------------+------------+------------+------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# | 100 | 8 | 11 | 49 | 143 | 255 |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# +--------+------------+------------+------------+------------+------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# NOTE: The above table was obtained by running the following commands:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# redis-benchmark -n 1000000 incr foo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# redis-cli object freq foo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# NOTE 2: The counter initial value is 5 in order to give new objects a chance&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to accumulate hits.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The counter decay time is the time, in minutes, that must elapse in order&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# for the key counter to be divided by two (or decremented if it has a value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# less &amp;lt;&amp;#x3D; 10).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The default value for the lfu-decay-time is 1. A Special value of 0 means to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# decay the counter every time it happens to be scanned.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# lfu-log-factor 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# lfu-decay-time 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;########################### ACTIVE DEFRAGMENTATION #######################&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# WARNING THIS FEATURE IS EXPERIMENTAL. However it was stress tested&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# even in production and manually tested by multiple engineers for some&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# time.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# What is active defragmentation?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# -------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Active (online) defragmentation allows a Redis server to compact the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# spaces left between small allocations and deallocations of data in memory,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# thus allowing to reclaim back memory.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Fragmentation is a natural process that happens with every allocator (but&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# less so with Jemalloc, fortunately) and certain workloads. Normally a server&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# restart is needed in order to lower the fragmentation, or at least to flush&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# away all the data and create it again. However thanks to this feature&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# implemented by Oran Agra for Redis 4.0 this process can happen at runtime&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# in an &amp;quot;hot&amp;quot; way, while the server is running.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Basically when the fragmentation is over a certain level (see the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# configuration options below) Redis will start to create new copies of the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# values in contiguous memory regions by exploiting certain specific Jemalloc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# features (in order to understand if an allocation is causing fragmentation&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# and to allocate it in a better place), and at the same time, will release the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# old copies of the data. This process, repeated incrementally for all the keys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# will cause the fragmentation to drop back to normal values.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Important things to understand:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1. This feature is disabled by default, and only works if you compiled Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# to use the copy of Jemalloc we ship with the source code of Redis.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This is the default with Linux builds.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 2. You never need to enable this feature if you don&amp;#39;t have fragmentation&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# issues.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 3. Once you experience fragmentation, you can enable this feature when&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# needed with the command &amp;quot;CONFIG SET activedefrag yes&amp;quot;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The configuration parameters are able to fine tune the behavior of the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# defragmentation process. If you are not sure about what they mean it is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# a good idea to leave the defaults untouched.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Enabled active defragmentation&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# activedefrag yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Minimum amount of fragmentation waste to start active defrag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# active-defrag-ignore-bytes 100mb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Minimum percentage of fragmentation to start active defrag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# active-defrag-threshold-lower 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Maximum percentage of fragmentation at which we use maximum effort&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# active-defrag-threshold-upper 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Minimal effort for defrag in CPU percentage&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# active-defrag-cycle-min 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Maximal effort for defrag in CPU percentage&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# active-defrag-cycle-max 75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Maximum number of set&amp;#x2F;hash&amp;#x2F;zset&amp;#x2F;list fields that will be processed from&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# the main dictionary scan&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# active-defrag-max-scan-fields 1000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://www.startanew.cn/2020/07/14/redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</guid>
            <title>redis主从复制</title>
            <link>http://www.startanew.cn/2020/07/14/redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</link>
            <category>redis</category>
            <pubDate>Tue, 14 Jul 2020 08:29:37 +0800</pubDate>
            <description><![CDATA[ &lt;h4 id=&#34;基本环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基本环境&#34;&gt;#&lt;/a&gt; 基本环境&lt;/h4&gt;
&lt;h6 id=&#34;启动3台redis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#启动3台redis&#34;&gt;#&lt;/a&gt; 启动 3 台 redis&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;redis-1：172.17.0.2:6379&lt;/li&gt;
&lt;li&gt;redis-2：172.17.0.3:6379&lt;/li&gt;
&lt;li&gt;redis-3：172.17.0.4:6379&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;  
&lt;h4 id=&#34;配置主从复制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置主从复制&#34;&gt;#&lt;/a&gt; 配置主从复制&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;分别进入 3 台 redis, 使用   info replication  查看信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以看到当前 3 台 redis 都是 master 角色，使用 redis-cli 命令修改 redis-6380、redis-6381 的主机为 172.17.0.2:6379&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;SLAVEOF host port &amp;#x2F;&amp;#x2F; SLAVEOF 172.17.0.2 6379&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;进入 172.17.0.2 使用   info replication  查看信息，看到两个从机说明配置成功。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;配置哨兵模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置哨兵模式&#34;&gt;#&lt;/a&gt; 配置哨兵模式&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;分别进入台 redis , 进行以下操作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入根目录创建 sentinel.conf 文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cd &amp;#x2F; &amp;amp;&amp;amp; touch sentinel.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;修改文件内容为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sentinel monitor mymaster 172.17.0.2 6379 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;使用 redis-sentinel &amp;#x2F;sentinel.conf 启动Redis哨兵监控&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;center&gt;
 &lt;img data-src=&#34;http://vps.startanew.cn/1594686718420om0hf87q.png&#34; &gt;
&lt;/center&gt;    
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://www.startanew.cn/2020/07/12/Redis-jedis/</guid>
            <title>Redis jedis</title>
            <link>http://www.startanew.cn/2020/07/12/Redis-jedis/</link>
            <category>redis</category>
            <pubDate>Sun, 12 Jul 2020 23:22:00 +0800</pubDate>
            <description><![CDATA[ &lt;h4 id=&#34;一-引入maven依赖&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-引入maven依赖&#34;&gt;#&lt;/a&gt; 一。引入 Maven 依赖&lt;/h4&gt;
 &lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;groupId&amp;gt;redis.clients&amp;lt;&amp;#x2F;groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;artifactId&amp;gt;jedis&amp;lt;&amp;#x2F;artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;version&amp;gt;2.9.0&amp;lt;&amp;#x2F;version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&amp;#x2F;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;  
&lt;h3 id=&#34;二-代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-代码&#34;&gt;#&lt;/a&gt; 二。代码&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;TestRedis&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Jedis jedis;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Before&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//连接redis服务器，192.168.0.100:6379&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Jedis(&lt;span class=&#34;string&#34;&gt;&amp;quot;192.168.0.100&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//权限认证&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.auth(&lt;span class=&#34;string&#34;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* redis存储字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;testString&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//-----添加数据----------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.set(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;xinxin&amp;quot;&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//向key--&amp;gt;name中放入了value--&amp;gt;xinxin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;));&lt;span class=&#34;comment&#34;&gt;//执行结果：xinxin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.append(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot; is my lover&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//拼接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.del(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//删除某个键&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//设置多个键值对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.mset(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;liuling&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;23&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;qq&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;476777XXX&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.incr(&lt;span class=&#34;string&#34;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//进行加1操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;) + &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; + jedis.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;) + &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; + jedis.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;qq&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* redis操作Map&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;testMap&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//-----添加数据----------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Map&amp;lt;String, String&amp;gt; map = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; HashMap&amp;lt;String, String&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.put(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;xinxin&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.put(&lt;span class=&#34;string&#34;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;22&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.put(&lt;span class=&#34;string&#34;&gt;&amp;quot;qq&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;123456&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.hmset(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;,map);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//取出user中的name，执行结果:[minxr]--&amp;gt;注意结果是一个泛型的List&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//第一个参数是存入redis中map对象的key，后面跟的是放入map中的对象的key，后面的key可以跟多个，是可变参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;List rsmap = jedis.hmget(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;qq&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(rsmap);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//删除map中的某个键值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.hdel(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.hmget(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;//因为删除了，所以返回的是null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.hlen(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;//返回key为user的键中存放的值的个数2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.exists(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;));&lt;span class=&#34;comment&#34;&gt;//是否存在key为user的记录 返回true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.hkeys(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;));&lt;span class=&#34;comment&#34;&gt;//返回map对象中的所有key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.hvals(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;));&lt;span class=&#34;comment&#34;&gt;//返回map对象中的所有value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Iterator iter=jedis.hkeys(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;).iterator();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (iter.hasNext())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;String key = iter.next();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(key+&lt;span class=&#34;string&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;+jedis.hmget(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;,key));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* jedis操作List&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;testList&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//开始前，先移除所有的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.del(&lt;span class=&#34;string&#34;&gt;&amp;quot;java framework&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.lrange(&lt;span class=&#34;string&#34;&gt;&amp;quot;java framework&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//先向key java framework中存放三条数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.lpush(&lt;span class=&#34;string&#34;&gt;&amp;quot;java framework&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;spring&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.lpush(&lt;span class=&#34;string&#34;&gt;&amp;quot;java framework&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;struts&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.lpush(&lt;span class=&#34;string&#34;&gt;&amp;quot;java framework&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;hibernate&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//再取出所有数据jedis.lrange是按范围取出，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 第一个是key，第二个是起始位置，第三个是结束位置，jedis.llen获取长度 -1表示取得所有&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.lrange(&lt;span class=&#34;string&#34;&gt;&amp;quot;java framework&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.del(&lt;span class=&#34;string&#34;&gt;&amp;quot;java framework&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.rpush(&lt;span class=&#34;string&#34;&gt;&amp;quot;java framework&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;spring&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.rpush(&lt;span class=&#34;string&#34;&gt;&amp;quot;java framework&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;struts&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.rpush(&lt;span class=&#34;string&#34;&gt;&amp;quot;java framework&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;hibernate&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.lrange(&lt;span class=&#34;string&#34;&gt;&amp;quot;java framework&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* jedis操作Set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;testSet&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//添加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.sadd(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;liuling&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.sadd(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;xinxin&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.sadd(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;ling&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.sadd(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;zhangxinxin&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.sadd(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;who&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//移除noname&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.srem(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;who&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.smembers(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;));&lt;span class=&#34;comment&#34;&gt;//获取所有加入的value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.sismember(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;who&amp;quot;&lt;/span&gt;));&lt;span class=&#34;comment&#34;&gt;//判断 who 是否是user集合的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.srandmember(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.scard(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;));&lt;span class=&#34;comment&#34;&gt;//返回集合的元素个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; InterruptedException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//jedis 排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//注意，此处的rpush和lpush是List的操作。是一个双向链表（但从表现来看的）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.del(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//先清除数据，再加入数据进行测试&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.rpush(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.lpush(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.lpush(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jedis.lpush(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.lrange(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;span class=&#34;comment&#34;&gt;// [9, 3, 6, 1]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.sort(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;//[1, 3, 6, 9] //输入排序后结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(jedis.lrange(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;testRedisPool&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RedisUtil.getJedis().set(&lt;span class=&#34;string&#34;&gt;&amp;quot;newname&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;中文测试&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(RedisUtil.getJedis().get(&lt;span class=&#34;string&#34;&gt;&amp;quot;newname&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://www.startanew.cn/2020/07/12/redis%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
            <title>redis基本用法</title>
            <link>http://www.startanew.cn/2020/07/12/redis%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
            <category>redis</category>
            <pubDate>Sun, 12 Jul 2020 22:50:49 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;一-redis-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-redis-命令&#34;&gt;#&lt;/a&gt; 一  . redis  命令&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;开启命令  ./redis-server  或  ./redis-server     路径 /redis.conf（指定配置文件）&lt;br&gt;
ps aux | grep ‘6379’  — 查询端口&lt;br&gt;
 kill -15 9886 — 杀死重置&lt;br&gt;
 kill -9 9886 — 强制杀死&lt;br&gt;
 service iptables stop 停止防火强&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;  
&lt;h3 id=&#34;二-redisconf基本配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-redisconf基本配置&#34;&gt;#&lt;/a&gt; 二  . redis.conf 基本配置&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;daemonize yes — 修改为 yes  后台启动&lt;br&gt;
 requirepass 123456  —- 注释取消掉设置账号密码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;三-redis命令连接方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-redis命令连接方式&#34;&gt;#&lt;/a&gt; 三 .redis 命令连接方式&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;./redis-cli -h 127.0.0.1 -p 6379 -a “123456”  — redis 使用账号密码连接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;四-redis基本类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四-redis基本类型&#34;&gt;#&lt;/a&gt; 四 .  redis 基本类型&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;字符串类型 (String)   示例: SET    mykey value&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编号&lt;/th&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;描述说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;SET key value&lt;/td&gt;
&lt;td&gt;此命令设置指定键的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;GET key	获取指定键的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;GETRANGE key start end&lt;/td&gt;
&lt;td&gt;获取存储在键上的字符串的子字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;GETSET key value&lt;/td&gt;
&lt;td&gt;设置键的字符串值并返回其旧值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;GETBIT key offset&lt;/td&gt;
&lt;td&gt;返回在键处存储的字符串值中偏移处的位值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;MGET key1 [key2…]&lt;/td&gt;
&lt;td&gt;获取所有给定键的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;SETBIT key offset value&lt;/td&gt;
&lt;td&gt;存储在键上的字符串值中设置或清除偏移处的位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;SETEX key seconds value&lt;/td&gt;
&lt;td&gt;使用键和到期时间来设置值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;SETNX key value&lt;/td&gt;
&lt;td&gt;设置键的值，仅当键不存在时&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;SETRANGE key offset value&lt;/td&gt;
&lt;td&gt;在指定偏移处开始的键处覆盖字符串的一部分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;STRLEN key&lt;/td&gt;
&lt;td&gt;获取存储在键中的值的长度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;MSET key value [key value …]&lt;/td&gt;
&lt;td&gt;为多个键分别设置它们的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;MSETNX key value [key value …]&lt;/td&gt;
&lt;td&gt;为多个键分别设置它们的值，仅当键不存在时&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;PSETEX key milliseconds value&lt;/td&gt;
&lt;td&gt;设置键的值和到期时间 (以毫秒为单位)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;INCR key&lt;/td&gt;
&lt;td&gt;将键的整数值增加 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;INCRBY key increment&lt;/td&gt;
&lt;td&gt;将键的整数值按给定的数值增加&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;INCRBYFLOAT key increment&lt;/td&gt;
&lt;td&gt;将键的浮点值按给定的数值增加&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;DECR key&lt;/td&gt;
&lt;td&gt;将键的整数值减 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;DECRBY key decrement&lt;/td&gt;
&lt;td&gt;按给定数值减少键的整数值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;APPEND key value&lt;/td&gt;
&lt;td&gt;将指定值附加到键&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;列表类型 (List)  示例:  LPUSH runoobkey redis&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;BLPOP key1 [key2 ] timeout&lt;/td&gt;
&lt;td&gt;移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;BRPOP key1 [key2 ] timeout&lt;/td&gt;
&lt;td&gt;移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;BRPOPLPUSH source destination timeout&lt;/td&gt;
&lt;td&gt;从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它； 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;LINDEX key index&lt;/td&gt;
&lt;td&gt;通过索引获取列表中的元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;LINSERT key BEFOREAFTER pivot value&lt;/td&gt;
&lt;td&gt;在列表的元素前或者后插入元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;LLEN key&lt;/td&gt;
&lt;td&gt;获取列表长度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;LPOP key&lt;/td&gt;
&lt;td&gt;移出并获取列表的第一个元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;LPUSH key value1 [value2]&lt;/td&gt;
&lt;td&gt;将一个或多个值插入到列表头部&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;LPUSHX key value&lt;/td&gt;
&lt;td&gt;将一个值插入到已存在的列表头部&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;LRANGE key start stop&lt;/td&gt;
&lt;td&gt;获取列表指定范围内的元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;LREM key count value&lt;/td&gt;
&lt;td&gt;移除列表元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;LSET key index value&lt;/td&gt;
&lt;td&gt;通过索引设置列表元素的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;LTRIM key start stop&lt;/td&gt;
&lt;td&gt;对一个列表进行修剪 (trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;RPOP key&lt;/td&gt;
&lt;td&gt;移除并获取列表最后一个元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;RPOPLPUSH source destination&lt;/td&gt;
&lt;td&gt;移除列表的最后一个元素，并将该元素添加到另一个列表并返回&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;RPUSH key value1 [value2]&lt;/td&gt;
&lt;td&gt;在列表中添加一个或多个值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;RPUSHX key value&lt;/td&gt;
&lt;td&gt;为已存在的列表添加值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;Redis 集合 (Set)  示例: SADD runoobkey redis&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;SADD key member1 [member2]&lt;/td&gt;
&lt;td&gt;向集合添加一个或多个成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;SCARD key 获取集合的成员数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;SDIFF key1 [key2]&lt;/td&gt;
&lt;td&gt;返回给定所有集合的差集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;SDIFFSTORE destination key1 [key2]&lt;/td&gt;
&lt;td&gt;返回给定所有集合的差集并存储在 destination 中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;SINTER key1 [key2]&lt;/td&gt;
&lt;td&gt;返回给定所有集合的交集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;SINTERSTORE destination key1 [key2]&lt;/td&gt;
&lt;td&gt;返回给定所有集合的交集并存储在 destination 中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;SISMEMBER key member&lt;/td&gt;
&lt;td&gt;判断 member 元素是否是集合 key 的成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;SMEMBERS key&lt;/td&gt;
&lt;td&gt;返回集合中的所有成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;SMOVE source destination member&lt;/td&gt;
&lt;td&gt;将 member 元素从 source 集合移动到 destination 集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;SPOP key&lt;/td&gt;
&lt;td&gt;移除并返回集合中的一个随机元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;SRANDMEMBER key [count]&lt;/td&gt;
&lt;td&gt;返回集合中一个或多个随机数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;SREM key member1 [member2]&lt;/td&gt;
&lt;td&gt;移除集合中一个或多个成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;SUNION key1 [key2]&lt;/td&gt;
&lt;td&gt;返回所有给定集合的并集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;SUNIONSTORE destination key1 [key2]&lt;/td&gt;
&lt;td&gt;所有给定集合的并集存储在 destination 集合中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;SSCAN key cursor [MATCH pattern] [COUNT count]&lt;/td&gt;
&lt;td&gt;迭代集合中的元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;Redis 有序集合 (sorted set) 示例: ZADD runoobkey 1 redis&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;ZADD key score1 member1 [score2 member2]&lt;/td&gt;
&lt;td&gt;向有序集合添加一个或多个成员，或者更新已存在成员的分数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;ZCARD key&lt;/td&gt;
&lt;td&gt;获取有序集合的成员数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;ZCOUNT key min max&lt;/td&gt;
&lt;td&gt;计算在有序集合中指定区间分数的成员数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;ZINCRBY key increment member&lt;/td&gt;
&lt;td&gt;有序集合中对指定成员的分数加上增量 increment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;ZINTERSTORE destination numkeys key [key …]&lt;/td&gt;
&lt;td&gt;计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 key 中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;ZLEXCOUNT key min max&lt;/td&gt;
&lt;td&gt;在有序集合中计算指定字典区间内成员数量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;ZRANGE key start stop [WITHSCORES]&lt;/td&gt;
&lt;td&gt;通过索引区间返回有序集合成指定区间内的成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;ZRANGEBYLEX key min max [LIMIT offset count]&lt;/td&gt;
&lt;td&gt;通过字典区间返回有序集合的成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT]&lt;/td&gt;
&lt;td&gt;通过分数返回有序集合指定区间内的成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;ZRANK key member&lt;/td&gt;
&lt;td&gt;返回有序集合中指定成员的索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;ZREM key member [member …]&lt;/td&gt;
&lt;td&gt;移除有序集合中的一个或多个成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;ZREMRANGEBYLEX key min max&lt;/td&gt;
&lt;td&gt;移除有序集合中给定的字典区间的所有成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;ZREMRANGEBYRANK key start stop&lt;/td&gt;
&lt;td&gt;移除有序集合中给定的排名区间的所有成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;ZREMRANGEBYSCORE key min max&lt;/td&gt;
&lt;td&gt;移除有序集合中给定的分数区间的所有成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;ZREVRANGE key start stop [WITHSCORES]&lt;/td&gt;
&lt;td&gt;返回有序集中指定区间内的成员，通过索引，分数从高到底&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;ZREVRANGEBYSCORE key max min [WITHSCORES]&lt;/td&gt;
&lt;td&gt;返回有序集中指定分数区间内的成员，分数从高到低排序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;ZREVRANK key member&lt;/td&gt;
&lt;td&gt;返回有序集合中指定成员的排名，有序集成员按分数值递减 (从大到小) 排序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;ZSCORE key member&lt;/td&gt;
&lt;td&gt;返回有序集中，成员的分数值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;ZUNIONSTORE destination numkeys key [key …]&lt;/td&gt;
&lt;td&gt;计算给定的一个或多个有序集的并集，并存储在新的 key 中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;ZSCAN key cursor [MATCH pattern] [COUNT count]&lt;/td&gt;
&lt;td&gt;迭代有序集合中的元素（包括元素成员和元素分值）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;Redis 哈希 (Hash)  示例：HMSET runoobkey name “redis tutorial” description&lt;br&gt;
“redis basic commands for caching” likes 20 visitors 23000&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;HDEL key field2 [field2]&lt;/td&gt;
&lt;td&gt;删除一个或多个哈希表字段&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;HEXISTS key field&lt;/td&gt;
&lt;td&gt;查看哈希表 key 中，指定的字段是否存在。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;HGET key field&lt;/td&gt;
&lt;td&gt;获取存储在哈希表中指定字段的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;HGETALL key&lt;/td&gt;
&lt;td&gt;获取在哈希表中指定 key 的所有字段和值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;HINCRBY key field increment&lt;/td&gt;
&lt;td&gt;为哈希表 key 中的指定字段的整数值加上增量 increment 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;HINCRBYFLOAT key field increment&lt;/td&gt;
&lt;td&gt;为哈希表 key 中的指定字段的浮点数值加上增量 increment 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;HKEYS key&lt;/td&gt;
&lt;td&gt;获取所有哈希表中的字段&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;HLEN key&lt;/td&gt;
&lt;td&gt;获取哈希表中字段的数量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;HMGET key field1 [field2]&lt;/td&gt;
&lt;td&gt;获取所有给定字段的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;HMSET key field1 value1 [field2 value2 ]&lt;/td&gt;
&lt;td&gt;同时将多个 field-value (域 - 值) 对设置到哈希表 key 中。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;HSET key field value&lt;/td&gt;
&lt;td&gt;将哈希表 key 中的字段 field 的值设为 value 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;HSETNX key field value&lt;/td&gt;
&lt;td&gt;只有在字段 field 不存在时，设置哈希表字段的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;HVALS key&lt;/td&gt;
&lt;td&gt;获取哈希表中所有值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;HSCAN key cursor [MATCH pattern] [COUNT count]&lt;/td&gt;
&lt;td&gt;迭代哈希表中的键值对。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://www.startanew.cn/2020/07/12/redis%E5%AE%89%E8%A3%85/</guid>
            <title>redis安装</title>
            <link>http://www.startanew.cn/2020/07/12/redis%E5%AE%89%E8%A3%85/</link>
            <category>redis</category>
            <pubDate>Sun, 12 Jul 2020 22:24:45 +0800</pubDate>
            <description><![CDATA[ &lt;h6 id=&#34;一安装环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一安装环境&#34;&gt;#&lt;/a&gt; 一。安装环境&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;系统： ubuntu 18.04&lt;/li&gt;
&lt;li&gt;软件：redis&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h6 id=&#34;二命令安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二命令安装&#34;&gt;#&lt;/a&gt; 二。命令安装&lt;/h6&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;执行命令:sudo  apt-get install redis-server&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;  
&lt;center&gt;
 &lt;img data-src=&#34;http://vps.startanew.cn/15945641310039zwqsuzo.png&#34; &gt;
&lt;/center&gt;  
&lt;ul&gt;
&lt;li&gt;连接 redis 服务器，测试是否开启&lt;/li&gt;
&lt;li&gt;在终端输入 redis-cli   连接服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;
 &lt;img data-src=&#34;http://vps.startanew.cn/1594564119256rghiyuvu.png&#34; &gt;
&lt;/center&gt;  
&lt;ul&gt;
&lt;li&gt;如果连接失败，输入 redis 服务开启命令:redis-server, 接着 输入 netstat -ap | grep  6379 查看 tcp 连接&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;
 &lt;img data-src=&#34;http://vps.startanew.cn/15945641110801icuoa92.png&#34; &gt;
&lt;/center&gt;    
&lt;h6 id=&#34;三-源码安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-源码安装&#34;&gt;#&lt;/a&gt; 三。源码安装&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;通过 wget 命令进行下载:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget http:&amp;#x2F;&amp;#x2F;download.redis.io&amp;#x2F;releases&amp;#x2F;redis-4.0.6.tar.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;解压：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;tar -zxf redis-4.0.6.tar.gz &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 &lt;center&gt;
  &lt;img data-src=&#34;http://vps.startanew.cn/1594564092044khrt0hzt.png&#34; &gt;
 &lt;/center&gt;  
&lt;ul&gt;
&lt;li&gt;安装编译环境&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt-get install gcc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;切换到 redis-4.0.6  目录进行编译安装&lt;/li&gt;
&lt;li&gt;切换目录   cd redis-4.0.6/&lt;/li&gt;
&lt;li&gt;编译  make&lt;/li&gt;
&lt;li&gt;进入到 src 目录  cd   src&lt;/li&gt;
&lt;li&gt;执行安装  make install   或   make PREFIX=/usr/local/redis install&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
