{
    "version": "https://jsonfeed.org/version/1",
    "title": "JAVA • All posts by \"mysql\" tag",
    "description": "爱编程，爱生活",
    "home_page_url": "http://www.startanew.cn",
    "items": [
        {
            "id": "http://www.startanew.cn/2020/07/13/mycat-%E9%AB%98%E5%8F%AF%E7%94%A8haproxy/",
            "url": "http://www.startanew.cn/2020/07/13/mycat-%E9%AB%98%E5%8F%AF%E7%94%A8haproxy/",
            "title": "mycat 高可用haproxy",
            "date_published": "2020-07-13T09:05:07.000Z",
            "content_html": "<h4 id=\"haproxy作用\"><a class=\"markdownIt-Anchor\" href=\"#haproxy作用\">#</a> haproxy 作用</h4>\n<p>HAProxy 厉害的点，不需要写 mysql 的健康检测，软件本身可以检测出 mysql 服务停止，然后切换到正常的服务器上，而且当 mysql 服务器重启之后，HAProxy 不需要重启，也能识别并且切换上去。</p>\n<h4 id=\"基本环境\"><a class=\"markdownIt-Anchor\" href=\"#基本环境\">#</a> 基本环境</h4>\n<p>mycat1:172.18.12.5</p>\n<p>mycat2:172.18.12.6</p>\n<a id=\"more\"></a>\n<h4 id=\"haproxycfg-配置文件\"><a class=\"markdownIt-Anchor\" href=\"#haproxycfg-配置文件\">#</a> haproxy.cfg 配置文件</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">global</span><br><span class=\"line\">daemon</span><br><span class=\"line\">#nbproc 1</span><br><span class=\"line\">#pidfile &#x2F;var&#x2F;run&#x2F;haproxy.pid</span><br><span class=\"line\">#工作目录</span><br><span class=\"line\">chroot &#x2F;usr&#x2F;local&#x2F;etc&#x2F;haproxy</span><br><span class=\"line\"></span><br><span class=\"line\">defaults</span><br><span class=\"line\">log 127.0.0.1 local0 err #[err warning info debug]</span><br><span class=\"line\">mode http #默认的模式mode &#123; tcp|http|health &#125;，tcp是4层，http是7层，health只会返回OK</span><br><span class=\"line\">retries 3 #两次连接失败就认为是服务器不可用，也可以通过后面设置</span><br><span class=\"line\">option redispatch #当serverId对应的服务器挂掉后，强制定向到其他健康的服务器</span><br><span class=\"line\">option abortonclose #当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接</span><br><span class=\"line\">option dontlognull #日志中不记录负载均衡的心跳检测记录</span><br><span class=\"line\">maxconn 4096 #默认的最大连接数</span><br><span class=\"line\">timeout connect 5000ms #连接超时</span><br><span class=\"line\">timeout client 30000ms #客户端超时</span><br><span class=\"line\">timeout server 30000ms #服务器超时</span><br><span class=\"line\">#timeout check 2000 #&#x3D;心跳检测超时</span><br><span class=\"line\"></span><br><span class=\"line\">######## 监控界面配置 #################</span><br><span class=\"line\">listen admin_status</span><br><span class=\"line\">#监控界面访问信息</span><br><span class=\"line\">bind 0.0.0.0:8888</span><br><span class=\"line\">mode http</span><br><span class=\"line\">#URI相对地址</span><br><span class=\"line\">stats uri &#x2F;dbs</span><br><span class=\"line\">#统计报告格式</span><br><span class=\"line\">stats realm Global\\ statistics</span><br><span class=\"line\">#登录账户信息</span><br><span class=\"line\">stats auth admin:123456</span><br><span class=\"line\">########frontend配置##############</span><br><span class=\"line\"></span><br><span class=\"line\">######## mysql负载均衡配置 ###############</span><br><span class=\"line\">listen proxy-mysql</span><br><span class=\"line\">bind 0.0.0.0:3306</span><br><span class=\"line\">mode tcp</span><br><span class=\"line\">#负载均衡算法</span><br><span class=\"line\">#static-rr 权重, leastconn 最少连接, source 请求IP, 轮询 roundrobin</span><br><span class=\"line\">balance roundrobin</span><br><span class=\"line\">#日志格式</span><br><span class=\"line\">#option tcplog</span><br><span class=\"line\">#在 mysql 创建一个没有权限的haproxy用户，密码为空。 haproxy用户</span><br><span class=\"line\">#create user &#39;haproxy&#39;@&#39;%&#39; identified by &#39;&#39;; FLUSH PRIVILEGES;</span><br><span class=\"line\">#option mysql-check user haproxy</span><br><span class=\"line\">#这里是容器中的IP地址，由于配置的是轮询roundrobin，weight 权重其实没有生效</span><br><span class=\"line\">server MYSQL_1 172.18.12.5:8066 check weight 1 maxconn 2000</span><br><span class=\"line\">server MYSQL_2 172.18.12.6:8066 check weight 1 maxconn 2000</span><br><span class=\"line\">#server MYSQL_3 192.168.130.102:3306 check weight 1 maxconn 2000</span><br><span class=\"line\">#使用keepalive检测死链</span><br><span class=\"line\">#option tcpka</span><br><span class=\"line\">#########################################</span><br></pre></td></tr></table></figure>\n<h4 id=\"web界面访问haproxy监控界面\"><a class=\"markdownIt-Anchor\" href=\"#web界面访问haproxy监控界面\">#</a> web 界面访问 haproxy 监控界面</h4>\n<p>配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> bind 0.0.0.0:8888</span><br><span class=\"line\">mode http</span><br><span class=\"line\">#URI相对地址</span><br><span class=\"line\">stats uri &#x2F;dbs</span><br><span class=\"line\">#统计报告格式</span><br><span class=\"line\">stats realm Global\\ statistics</span><br><span class=\"line\">#登录账户信息</span><br><span class=\"line\">stats auth admin:123456</span><br></pre></td></tr></table></figure>\n<p>启动 haproxy 后，可通过 http://ip:8888/dbs 查看 mycat 状态</p>\n<p>效果图如下</p>\n<center>\n <img data-src=\"http://vps.startanew.cn/1594631222393uq2zb4sw.png\" >\n</center>    \n还需要通过keepalived保证haproxy的高可用，keepalived搭建失败\n",
            "tags": [
                "mysql"
            ]
        },
        {
            "id": "http://www.startanew.cn/2020/07/13/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6-mycat/",
            "url": "http://www.startanew.cn/2020/07/13/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6-mycat/",
            "title": "mysql主从复制-mycat",
            "date_published": "2020-07-13T08:50:13.000Z",
            "content_html": "<h4 id=\"基本环境\"><a class=\"markdownIt-Anchor\" href=\"#基本环境\">#</a> 基本环境</h4>\n<ul>\n<li>master1：172.18.12.1</li>\n<li>master2：172.18.12.2</li>\n<li>slave1：172.18.12.3</li>\n<li>slave2：172.18.12.4</li>\n<li>架构双主双从</li>\n</ul>\n<a id=\"more\"></a>\n<h4 id=\"mycat-配置\"><a class=\"markdownIt-Anchor\" href=\"#mycat-配置\">#</a> mycat 配置</h4>\n<p>server.xml 配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;!-- - - Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); </span><br><span class=\"line\">- you may not use this file except in compliance with the License. - You </span><br><span class=\"line\">may obtain a copy of the License at - - http:&#x2F;&#x2F;www.apache.org&#x2F;licenses&#x2F;LICENSE-2.0 </span><br><span class=\"line\">- - Unless required by applicable law or agreed to in writing, software - </span><br><span class=\"line\">distributed under the License is distributed on an &quot;AS IS&quot; BASIS, - WITHOUT </span><br><span class=\"line\">WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. - See the </span><br><span class=\"line\">License for the specific language governing permissions and - limitations </span><br><span class=\"line\">under the License. --&gt;</span><br><span class=\"line\">&lt;!DOCTYPE mycat:server SYSTEM &quot;server.dtd&quot;&gt;</span><br><span class=\"line\">&lt;mycat:server xmlns:mycat&#x3D;&quot;http:&#x2F;&#x2F;io.mycat&#x2F;&quot;&gt;</span><br><span class=\"line\">&lt;system&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;nonePasswordLogin&quot;&gt;0&lt;&#x2F;property&gt; &lt;!-- 0为需要密码登陆、1为不需要密码登陆 ,默认为0，设置为1则需要指定默认账户--&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;useHandshakeV10&quot;&gt;1&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;useSqlStat&quot;&gt;0&lt;&#x2F;property&gt; &lt;!-- 1为开启实时统计、0为关闭 --&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;useGlobleTableCheck&quot;&gt;0&lt;&#x2F;property&gt; &lt;!-- 1为开启全加班一致性检测、0为关闭 --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;&quot;sequnceHandlerType&quot;&gt;2&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;subqueryRelationshipCheck&quot;&gt;false&lt;&#x2F;property&gt; &lt;!-- 子查询中存在关联查询的情况下,检查关联字段中是否有分片字段 .默认 false --&gt;</span><br><span class=\"line\">&lt;!-- &lt;property name&#x3D;&quot;useCompression&quot;&gt;1&lt;&#x2F;property&gt;--&gt; &lt;!--1为开启mysql压缩协议--&gt;</span><br><span class=\"line\">&lt;!-- &lt;property name&#x3D;&quot;fakeMySQLVersion&quot;&gt;5.6.20&lt;&#x2F;property&gt;--&gt; &lt;!--设置模拟的MySQL版本号--&gt;</span><br><span class=\"line\">&lt;!-- &lt;property name&#x3D;&quot;processorBufferChunk&quot;&gt;40960&lt;&#x2F;property&gt; --&gt;</span><br><span class=\"line\">&lt;!-- </span><br><span class=\"line\">&lt;property name&#x3D;&quot;processors&quot;&gt;1&lt;&#x2F;property&gt; </span><br><span class=\"line\">&lt;property name&#x3D;&quot;processorExecutor&quot;&gt;32&lt;&#x2F;property&gt; </span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;!--默认为type 0: DirectByteBufferPool | type 1 ByteBufferArena | type 2 NettyBufferPool --&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;processorBufferPoolType&quot;&gt;0&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;!--默认是65535 64K 用于sql解析时最大文本长度 --&gt;</span><br><span class=\"line\">&lt;!--&lt;property name&#x3D;&quot;maxStringLiteralLength&quot;&gt;65535&lt;&#x2F;property&gt;--&gt;</span><br><span class=\"line\">&lt;!--&lt;property name&#x3D;&quot;sequnceHandlerType&quot;&gt;0&lt;&#x2F;property&gt;--&gt;</span><br><span class=\"line\">&lt;!--&lt;property name&#x3D;&quot;backSocketNoDelay&quot;&gt;1&lt;&#x2F;property&gt;--&gt;</span><br><span class=\"line\">&lt;!--&lt;property name&#x3D;&quot;frontSocketNoDelay&quot;&gt;1&lt;&#x2F;property&gt;--&gt;</span><br><span class=\"line\">&lt;!--&lt;property name&#x3D;&quot;processorExecutor&quot;&gt;16&lt;&#x2F;property&gt;--&gt;</span><br><span class=\"line\">&lt;!--</span><br><span class=\"line\">&lt;property name&#x3D;&quot;serverPort&quot;&gt;8066&lt;&#x2F;property&gt; &lt;property name&#x3D;&quot;managerPort&quot;&gt;9066&lt;&#x2F;property&gt; </span><br><span class=\"line\">&lt;property name&#x3D;&quot;idleTimeout&quot;&gt;300000&lt;&#x2F;property&gt; &lt;property name&#x3D;&quot;bindIp&quot;&gt;0.0.0.0&lt;&#x2F;property&gt; </span><br><span class=\"line\">&lt;property name&#x3D;&quot;frontWriteQueueSize&quot;&gt;4096&lt;&#x2F;property&gt; &lt;property name&#x3D;&quot;processors&quot;&gt;32&lt;&#x2F;property&gt; --&gt;</span><br><span class=\"line\">&lt;!--分布式事务开关，0为不过滤分布式事务，1为过滤分布式事务（如果分布式事务内只涉及全局表，则不过滤），2为不过滤分布式事务,但是记录分布式事务日志--&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;handleDistributedTransactions&quot;&gt;0&lt;&#x2F;property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--</span><br><span class=\"line\">off heap for merge&#x2F;order&#x2F;group&#x2F;limit 1开启 0关闭</span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;useOffHeapForMerge&quot;&gt;1&lt;&#x2F;property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--</span><br><span class=\"line\">单位为m</span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;memoryPageSize&quot;&gt;64k&lt;&#x2F;property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--</span><br><span class=\"line\">单位为k</span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;spillsFileBufferSize&quot;&gt;1k&lt;&#x2F;property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;&quot;useStreamOutput&quot;&gt;0&lt;&#x2F;property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--</span><br><span class=\"line\">单位为m</span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;systemReserveMemorySize&quot;&gt;384m&lt;&#x2F;property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--是否采用zookeeper协调切换 --&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;useZKSwitch&quot;&gt;false&lt;&#x2F;property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- XA Recovery Log日志路径 --&gt;</span><br><span class=\"line\">&lt;!--&lt;property name&#x3D;&quot;XARecoveryLogBaseDir&quot;&gt;.&#x2F;&lt;&#x2F;property&gt;--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- XA Recovery Log日志名称 --&gt;</span><br><span class=\"line\">&lt;!--&lt;property name&#x3D;&quot;XARecoveryLogBaseName&quot;&gt;tmlog&lt;&#x2F;property&gt;--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;&#x2F;system&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 全局SQL防火墙设置 --&gt;</span><br><span class=\"line\">&lt;!--白名单可以使用通配符%或着*--&gt;</span><br><span class=\"line\">&lt;!--例如&lt;host host&#x3D;&quot;127.0.0.*&quot; user&#x3D;&quot;root&quot;&#x2F;&gt;--&gt;</span><br><span class=\"line\">&lt;!--例如&lt;host host&#x3D;&quot;127.0.*&quot; user&#x3D;&quot;root&quot;&#x2F;&gt;--&gt;</span><br><span class=\"line\">&lt;!--例如&lt;host host&#x3D;&quot;127.*&quot; user&#x3D;&quot;root&quot;&#x2F;&gt;--&gt;</span><br><span class=\"line\">&lt;!--例如&lt;host host&#x3D;&quot;1*7.*&quot; user&#x3D;&quot;root&quot;&#x2F;&gt;--&gt;</span><br><span class=\"line\">&lt;!--这些配置情况下对于127.0.0.1都能以root账户登录--&gt;</span><br><span class=\"line\">&lt;!--</span><br><span class=\"line\">&lt;firewall&gt;</span><br><span class=\"line\">&lt;whitehost&gt;</span><br><span class=\"line\">&lt;host host&#x3D;&quot;1*7.0.0.*&quot; user&#x3D;&quot;root&quot;&#x2F;&gt;</span><br><span class=\"line\">&lt;&#x2F;whitehost&gt;</span><br><span class=\"line\">&lt;blacklist check&#x3D;&quot;false&quot;&gt;</span><br><span class=\"line\">&lt;&#x2F;blacklist&gt;</span><br><span class=\"line\">&lt;&#x2F;firewall&gt;</span><br><span class=\"line\">--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;user name&#x3D;&quot;root&quot; defaultAccount&#x3D;&quot;true&quot;&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;password&quot;&gt;1234567&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;schemas&quot;&gt;TESTDB&lt;&#x2F;property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 表级 DML 权限设置 --&gt;</span><br><span class=\"line\">&lt;!-- </span><br><span class=\"line\">&lt;privileges check&#x3D;&quot;false&quot;&gt;</span><br><span class=\"line\">&lt;schema name&#x3D;&quot;TESTDB&quot; dml&#x3D;&quot;0110&quot; &gt;</span><br><span class=\"line\">&lt;table name&#x3D;&quot;tb01&quot; dml&#x3D;&quot;0000&quot;&gt;&lt;&#x2F;table&gt;</span><br><span class=\"line\">&lt;table name&#x3D;&quot;tb02&quot; dml&#x3D;&quot;1111&quot;&gt;&lt;&#x2F;table&gt;</span><br><span class=\"line\">&lt;&#x2F;schema&gt;</span><br><span class=\"line\">&lt;&#x2F;privileges&gt; </span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;&#x2F;user&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;user name&#x3D;&quot;user&quot;&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;password&quot;&gt;user&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;schemas&quot;&gt;TESTDB&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;property name&#x3D;&quot;readOnly&quot;&gt;true&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;&#x2F;user&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;&#x2F;mycat:server&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>scheam.xml   配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE mycat:schema SYSTEM &quot;schema.dtd&quot;&gt;</span><br><span class=\"line\">&lt;mycat:schema xmlns:mycat&#x3D;&quot;http:&#x2F;&#x2F;io.mycat&#x2F;&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;schema name&#x3D;&quot;TESTDB&quot; checkSQLschema&#x3D;&quot;false&quot; sqlMaxLimit&#x3D;&quot;100&quot; dataNode&#x3D;&quot;dn1&quot;&gt;</span><br><span class=\"line\">&lt;&#x2F;schema&gt;</span><br><span class=\"line\">&lt;dataNode name&#x3D;&quot;dn1&quot; dataHost&#x3D;&quot;localhost1&quot; database&#x3D;&quot;test&quot; &#x2F;&gt;</span><br><span class=\"line\">&lt;!--&lt;dataNode name&#x3D;&quot;dn4&quot; dataHost&#x3D;&quot;sequoiadb1&quot; database&#x3D;&quot;SAMPLE&quot; &#x2F;&gt;</span><br><span class=\"line\">&lt;dataNode name&#x3D;&quot;jdbc_dn1&quot; dataHost&#x3D;&quot;jdbchost&quot; database&#x3D;&quot;db1&quot; &#x2F;&gt;</span><br><span class=\"line\">&lt;dataNode name&#x3D;&quot;jdbc_dn2&quot; dataHost&#x3D;&quot;jdbchost&quot; database&#x3D;&quot;db2&quot; &#x2F;&gt;</span><br><span class=\"line\">&lt;dataNode name&#x3D;&quot;jdbc_dn3&quot; dataHost&#x3D;&quot;jdbchost&quot; database&#x3D;&quot;db3&quot; &#x2F;&gt; --&gt;</span><br><span class=\"line\">&lt;dataHost name&#x3D;&quot;localhost1&quot; maxCon&#x3D;&quot;1000&quot; minCon&#x3D;&quot;10&quot; balance&#x3D;&quot;1&quot;</span><br><span class=\"line\">writeType&#x3D;&quot;0&quot; dbType&#x3D;&quot;mysql&quot; dbDriver&#x3D;&quot;native&quot; switchType&#x3D;&quot;1&quot; slaveThreshold&#x3D;&quot;100&quot;&gt;</span><br><span class=\"line\">&lt;heartbeat&gt;select user()&lt;&#x2F;heartbeat&gt;</span><br><span class=\"line\">&lt;!-- can have multi write hosts --&gt;</span><br><span class=\"line\">&lt;writeHost host&#x3D;&quot;hostM1&quot; url&#x3D;&quot;172.18.12.1:3306&quot; user&#x3D;&quot;root&quot;</span><br><span class=\"line\">password&#x3D;&quot;root&quot;&gt;</span><br><span class=\"line\">&lt;!-- can have multi read hosts --&gt;</span><br><span class=\"line\">&lt;readHost host&#x3D;&quot;hostS2&quot; url&#x3D;&quot;172.18.12.3:3306&quot; user&#x3D;&quot;root&quot; password&#x3D;&quot;root&quot; &#x2F;&gt;</span><br><span class=\"line\">&lt;&#x2F;writeHost&gt;</span><br><span class=\"line\">&lt;writeHost host&#x3D;&quot;hostM2&quot; url&#x3D;&quot;172.18.12.2:3306&quot; user&#x3D;&quot;root&quot;</span><br><span class=\"line\">password&#x3D;&quot;root&quot;&gt;</span><br><span class=\"line\">&lt;!-- can have multi read hosts --&gt;</span><br><span class=\"line\">&lt;readHost host&#x3D;&quot;hostS2&quot; url&#x3D;&quot;172.18.12.4:3306&quot; user&#x3D;&quot;root&quot; password&#x3D;&quot;root&quot; &#x2F;&gt;</span><br><span class=\"line\">&lt;&#x2F;writeHost&gt;</span><br><span class=\"line\">&lt;!-- &lt;writeHost host&#x3D;&quot;hostM2&quot; url&#x3D;&quot;localhost:3316&quot; user&#x3D;&quot;root&quot; password&#x3D;&quot;123456&quot;&#x2F;&gt; --&gt;</span><br><span class=\"line\">&lt;&#x2F;dataHost&gt;</span><br><span class=\"line\">&lt;!--</span><br><span class=\"line\">&lt;dataHost name&#x3D;&quot;sequoiadb1&quot; maxCon&#x3D;&quot;1000&quot; minCon&#x3D;&quot;1&quot; balance&#x3D;&quot;0&quot; dbType&#x3D;&quot;sequoiadb&quot; dbDriver&#x3D;&quot;jdbc&quot;&gt;</span><br><span class=\"line\">&lt;heartbeat&gt; &lt;&#x2F;heartbeat&gt;</span><br><span class=\"line\">&lt;writeHost host&#x3D;&quot;hostM1&quot; url&#x3D;&quot;sequoiadb:&#x2F;&#x2F;1426587161.dbaas.sequoialab.net:11920&#x2F;SAMPLE&quot; user&#x3D;&quot;jifeng&quot; password&#x3D;&quot;jifeng&quot;&gt;&lt;&#x2F;writeHost&gt;</span><br><span class=\"line\">&lt;&#x2F;dataHost&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dataHost name&#x3D;&quot;oracle1&quot; maxCon&#x3D;&quot;1000&quot; minCon&#x3D;&quot;1&quot; balance&#x3D;&quot;0&quot; writeType&#x3D;&quot;0&quot; dbType&#x3D;&quot;oracle&quot; dbDriver&#x3D;&quot;jdbc&quot;&gt; &lt;heartbeat&gt;select 1 from dual&lt;&#x2F;heartbeat&gt;</span><br><span class=\"line\">&lt;connectionInitSql&gt;alter session set nls_date_format&#x3D;&#39;yyyy-mm-dd hh24:mi:ss&#39;&lt;&#x2F;connectionInitSql&gt;</span><br><span class=\"line\">&lt;writeHost host&#x3D;&quot;hostM1&quot; url&#x3D;&quot;jdbc:oracle:thin:@127.0.0.1:1521:nange&quot; user&#x3D;&quot;base&quot; password&#x3D;&quot;123456&quot; &gt; &lt;&#x2F;writeHost&gt; &lt;&#x2F;dataHost&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dataHost name&#x3D;&quot;jdbchost&quot; maxCon&#x3D;&quot;1000&quot; minCon&#x3D;&quot;1&quot; balance&#x3D;&quot;0&quot; writeType&#x3D;&quot;0&quot; dbType&#x3D;&quot;mongodb&quot; dbDriver&#x3D;&quot;jdbc&quot;&gt;</span><br><span class=\"line\">&lt;heartbeat&gt;select user()&lt;&#x2F;heartbeat&gt;</span><br><span class=\"line\">&lt;writeHost host&#x3D;&quot;hostM&quot; url&#x3D;&quot;mongodb:&#x2F;&#x2F;192.168.0.99&#x2F;test&quot; user&#x3D;&quot;admin&quot; password&#x3D;&quot;123456&quot; &gt;&lt;&#x2F;writeHost&gt; &lt;&#x2F;dataHost&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dataHost name&#x3D;&quot;sparksql&quot; maxCon&#x3D;&quot;1000&quot; minCon&#x3D;&quot;1&quot; balance&#x3D;&quot;0&quot; dbType&#x3D;&quot;spark&quot; dbDriver&#x3D;&quot;jdbc&quot;&gt;</span><br><span class=\"line\">&lt;heartbeat&gt; &lt;&#x2F;heartbeat&gt;</span><br><span class=\"line\">&lt;writeHost host&#x3D;&quot;hostM1&quot; url&#x3D;&quot;jdbc:hive2:&#x2F;&#x2F;feng01:10000&quot; user&#x3D;&quot;jifeng&quot; password&#x3D;&quot;jifeng&quot;&gt;&lt;&#x2F;writeHost&gt; &lt;&#x2F;dataHost&gt; --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- &lt;dataHost name&#x3D;&quot;jdbchost&quot; maxCon&#x3D;&quot;1000&quot; minCon&#x3D;&quot;10&quot; balance&#x3D;&quot;0&quot; dbType&#x3D;&quot;mysql&quot;</span><br><span class=\"line\">dbDriver&#x3D;&quot;jdbc&quot;&gt; &lt;heartbeat&gt;select user()&lt;&#x2F;heartbeat&gt; &lt;writeHost host&#x3D;&quot;hostM1&quot;</span><br><span class=\"line\">url&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&quot; user&#x3D;&quot;root&quot; password&#x3D;&quot;123456&quot;&gt; &lt;&#x2F;writeHost&gt;</span><br><span class=\"line\">&lt;&#x2F;dataHost&gt; --&gt;</span><br><span class=\"line\">&lt;&#x2F;mycat:schema&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>MyCAT 配置解析</p>\n<p>server.xml Mycat 的配置文件，设置账号、参数等<br>\n schema.xml Mycat 对应的物理数据库和数据库表的配置<br>\n rule.xml Mycat 分片（分库分表）规则</p>\n<p>一 ：wrapper.conf<br>\n–配置 jdk<br>\nwrapper.java.command=D:/Program Files/Java/jdk1.8.0_131/bin/java.exe</p>\n<p>二：server.xml</p>\n<ol>\n<li>user 标签</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;user name&#x3D;”root”&gt;  </span><br><span class=\"line\">     &lt;property name&#x3D;”password”&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">      &lt;property name&#x3D;”schemas”&gt;TESTDB&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;&#x2F;user&gt;</span><br></pre></td></tr></table></figure>\n<p>user 用户配置节点<br>\n–name 登录的用户名，也就是连接 Mycat 的用户名<br>\n–password 登录的密码，也就是连接 Mycat 的密码<br>\n–schemas 数据库名，这里会和 schema.xml 中的配置关联，多个用逗号分开，例如需要这个用户需要管理两个数据库 db1,db2，则配置 db1,dbs</p>\n<p>2、privileges 标签<br>\n对用户的 schema 以及表进行精细化的 DML 权限控制</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;privileges check&#x3D;”false”&gt;</span><br><span class=\"line\">&lt;&#x2F;privileges&gt;</span><br></pre></td></tr></table></figure>\n<p>–check 表示是否开启 DML 权限检查。默认是关闭。server.dtd 文件中 <!ELEMENT privileges (schema)*> 说明可以有多个 schema 的配置。<br>\n–dml 顺序说明：insert,update,select,delete</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;schema name&#x3D;”db1″ dml&#x3D;”0110″ &gt;</span><br><span class=\"line\">&lt;table name&#x3D;”tb01″ dml&#x3D;”0000″&gt;&lt;&#x2F;table&gt;</span><br><span class=\"line\">&lt;table name&#x3D;”tb02″ dml&#x3D;”1111″&gt;&lt;&#x2F;table&gt;</span><br><span class=\"line\">&lt;&#x2F;schema&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>db1 的权限是 update,select。<br>\ntb01 的权限是啥都不能干。<br>\ntb02 的权限是 insert,update,select,delete。<br>\n其他表默认是 udpate,select。</p>\n<ol start=\"2\">\n<li>system 标签</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这个标签内嵌套的所有 property 标签都与系统配置有关。</span><br><span class=\"line\">&lt;property name&#x3D;”charset”&gt;utf8&lt;&#x2F;property&gt;</span><br><span class=\"line\">字符集</span><br><span class=\"line\">&lt;property name&#x3D;”processors”&gt;1&lt;&#x2F;property&gt;</span><br><span class=\"line\">处理线程数量，默认是cpu数量。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”processorBufferChunk”&gt;4096&lt;&#x2F;property&gt;</span><br><span class=\"line\">每次读取留的数量，默认4096。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”processorBufferPool”&gt;409600&lt;&#x2F;property&gt;</span><br><span class=\"line\">创建共享buffer需要占用的总空间大小。processorBufferChunk*processors*100。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”processorBufferPoolType”&gt;0&lt;&#x2F;property&gt;</span><br><span class=\"line\">默认为0。0表示DirectByteBufferPool，1表示ByteBufferArena。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”processorBufferLocalPercent”&gt;100&lt;&#x2F;property&gt;</span><br><span class=\"line\">二级共享buffer是processorBufferPool的百分比，这里设置的是百分比。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”sequnceHandlerType”&gt;100&lt;&#x2F;property&gt;</span><br><span class=\"line\">全局ID生成方式。(0:为本地文件方式，1:为数据库方式；2:为时间戳序列方式；3:为ZK生成ID；4:为ZK递增ID生成。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”useCompression”&gt;1&lt;&#x2F;property&gt;</span><br><span class=\"line\">是否开启mysql压缩协议。1为开启，0为关闭，默认关闭。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”packetHeaderSize”&gt;4&lt;&#x2F;property&gt;</span><br><span class=\"line\">指定 Mysql 协议中的报文头长度。默认 4。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”maxPacketSize”&gt;16M&lt;&#x2F;property&gt;</span><br><span class=\"line\">指定 Mysql 协议可以携带的数据最大长度。默认 16M。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”idleTimeout”&gt;1800000&lt;&#x2F;property&gt;</span><br><span class=\"line\">指定连接的空闲超时时间。某连接在发起空闲检查下，发现距离上次使用超过了空闲时间，那么这个连接会被回收，就是被直接的关闭掉。默认 30 分钟，单位毫秒。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”txIsolation”&gt;3&lt;&#x2F;property&gt;</span><br><span class=\"line\">前端连接的初始化事务隔离级别，只在初始化的时候使用，后续会根据客户端传递过来的属性对后端数据库连接进行同步。默认为 REPEATED_READ，设置值为数字默认 3。</span><br><span class=\"line\">READ_UNCOMMITTED &#x3D; 1;</span><br><span class=\"line\">READ_COMMITTED &#x3D; 2;</span><br><span class=\"line\">REPEATED_READ &#x3D; 3;</span><br><span class=\"line\">SERIALIZABLE &#x3D; 4;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”sqlExecuteTimeout”&gt;300&lt;&#x2F;property&gt;</span><br><span class=\"line\">SQL 执行超时的时间，Mycat 会检查连接上最后一次执行 SQL 的时间，若超过这个时间则会直接关闭这连接。默认时间为 300 秒，单位秒。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”processorCheckPeriod”&gt;1000&lt;&#x2F;property&gt;</span><br><span class=\"line\">清理 NIOProcessor 上前后端空闲、超时和关闭连接的间隔时间。默认是 1 秒，单</span><br><span class=\"line\">位毫秒。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”dataNodeIdleCheckPeriod”&gt;300000&lt;&#x2F;property&gt;</span><br><span class=\"line\">对后端连接进行空闲、超时检查的时间间隔，默认是 300 秒，单位毫秒。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”dataNodeHeartbeatPeriod”&gt;10000&lt;&#x2F;property&gt;</span><br><span class=\"line\">对后端所有读、写库发起心跳的间隔时间，默认是 10 秒，单位毫秒。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”bindIp”&gt;0.0.0.0&lt;&#x2F;property&gt;</span><br><span class=\"line\">mycat 服务监听的 IP 地址，默认值为 0.0.0.0。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”serverPort”&gt;8066&lt;&#x2F;property&gt;</span><br><span class=\"line\">定义 mycat 的使用端口，默认值为 8066。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”managerPort”&gt;9066&lt;&#x2F;property&gt;</span><br><span class=\"line\">定义 mycat 的管理端口，默认值为 9066。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”fakeMySQLVersion”&gt;5.6&lt;&#x2F;property&gt;</span><br><span class=\"line\">mycat 模拟的 mysql 版本号，默认值为 5.6 版本，如非特需，不要修改这个值，目前支持设置 5.5,5.6,5.7 版本，其他版本可能会有问题。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”useSqlStat”&gt;0&lt;&#x2F;property&gt;</span><br><span class=\"line\">是否开启实时统计。1为开启；0为关闭 。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”useGlobleTableCheck”&gt;0&lt;&#x2F;property&gt;</span><br><span class=\"line\">是否开启全局表一致性检测。1为开启；0为关闭 。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”handleDistributedTransactions”&gt;0&lt;&#x2F;property&gt;</span><br><span class=\"line\">分布式事务开关。0为不过滤分布式事务；1为过滤分布式事务；2 为不过滤分布式事务,但是记录分布式事务日志。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;property name&#x3D;”maxStringLiteralLength”&gt;65535&lt;&#x2F;property&gt;</span><br><span class=\"line\">默认是65535。 64K 用于sql解析时最大文本长度</span><br><span class=\"line\">以上举例的属性仅仅是一部分，可以配置的变量很多，具体可以查看SystemConfig这个类的属性内容。</span><br><span class=\"line\">System标签下的属性，一般是上线后，需要根据实际运行的情况，分析后调优的时候进行修改。</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>Firewall 标签<br>\n顾名思义，这个就是关于防火墙的设置，也就是在网络层对请求的地址进行限制，主要是从安全角度来保证 Mycat 不被匿名 IP 进行访问</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;firewall&gt;</span><br><span class=\"line\">&lt;whitehost&gt;</span><br><span class=\"line\">&lt;host host&#x3D;”127.0.0.1″ user&#x3D;”mycat”&#x2F;&gt;</span><br><span class=\"line\">&lt;host host&#x3D;”127.0.0.2″ user&#x3D;”mycat”&#x2F;&gt;</span><br><span class=\"line\">&lt;&#x2F;whitehost&gt;</span><br><span class=\"line\">&lt;blacklist check&#x3D;”false”&gt;</span><br><span class=\"line\">&lt;&#x2F;blacklist&gt;</span><br><span class=\"line\">&lt;&#x2F;firewall&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>设置很简单，很容易理解，只要设置了白名单，表示开启了防火墙，只有白名单的连接才可以进行连接。</p>\n<p>三：schema.xml<br>\n–schema 数据库设置，此数据库为逻辑数据库，name 与 server.xml 中 schema 对应<br>\n–dataNode 分片信息，也就是分库相关配置<br>\n–dataHost 物理数据库，真正存储数据的数据库<br>\n 1、schema 标签</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;schema name&#x3D;”TESTDB” checkSQLschema&#x3D;”false” sqlMaxLimit&#x3D;”10″&gt;</span><br><span class=\"line\">&lt;&#x2F;schema&gt;</span><br></pre></td></tr></table></figure>\n<p>schema 标签用来定义 mycat 实例中的逻辑库，mycat 可以有多个逻辑库，每个逻辑库都有自己的相关配置。可以使用 schema 标签来划分这些不同的逻辑库<br>\n如果不配置 schema 标签，所有表的配置会属于同一个默认的逻辑库。逻辑库的概念和 MySql 的 database 的概念一样，我们在查询两个不同逻辑库中的表的时候，需要切换到该逻辑库下进行查询。</p>\n<p>–name 逻辑数据库名，与 server.xml 中的 schema 对应<br>\n–checkSQLschema 数据库前缀相关设置，当该值为 true 时，例如我们执行语句 select * from TESTDB.company 。mycat 会把语句修改为 select * from company 去掉 TESTDB。<br>\n–sqlMaxLimit 当该值设置为某个数值时，每条执行的 sql 语句，如果没有加上 limit 语句，Mycat 会自动加上对应的值。不写的话，默认返回所有的值。<br>\n需要注意的是，如果运行的 schema 为非拆分库的，那么该属性不会生效。需要自己 sql 语句加 limit。<br>\n2、table 标签</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;table name&#x3D;”travelrecord” dataNode&#x3D;”dn1,dn2,dn3″ rule&#x3D;”auto-sharding-long” &#x2F;&gt;</span><br><span class=\"line\">&lt;table name&#x3D;”company” primaryKey&#x3D;”ID” type&#x3D;”global” dataNode&#x3D;”dn1,dn2,dn3″ &#x2F;&gt;</span><br></pre></td></tr></table></figure>\n<p>–name 表名，物理数据库中表名<br>\n–dataNode 表存储到哪些节点，多个节点用逗号分隔。节点为下文 dataNode 设置的 name<br>\n–primaryKey 主键字段名，自动生成主键时需要设置<br>\n–autoIncrement 是否自增<br>\n–rule 分片规则名，具体规则下文 rule 详细介绍<br>\n–type 该属性定义了逻辑表的类型，目前逻辑表只有全局表和普通表。全局表： global 普通表：无<br>\n注：全局表查询任意节点，普通表查询所有节点效率低<br>\n–autoIncrement mysql 对非自增长主键，使用 last_insert_id () 是不会返回结果的，只会返回 0. 所以，只有定义了自增长主键的表，才可以用 last_insert_id () 返回主键值。<br>\nmycat 提供了自增长主键功能，但是对应的 mysql 节点上数据表，没有 auto_increment, 那么在 mycat 层调用 last_insert_id () 也是不会返回结果的。<br>\n–needAddLimit 指定表是否需要自动的在每个语句后面加上 limit 限制，由于使用了分库分表，数据量有时候会特别庞大，这时候执行查询语句，<br>\n忘记加上 limt 就会等好久，所以 mycat 自动为我们加上了 limit 100，这个属性默认为 true，可以自己设置为 false 禁用。如果使用这个功能，最好配合使用数据库模式的全局序列。<br>\n–subTables 分表，分表目前不支持 Join。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1) childTable标签</span><br><span class=\"line\">&lt;table name&#x3D;”customer” primaryKey&#x3D;”ID” dataNode&#x3D;”dn1,dn2″ rule&#x3D;”sharding-by-intfile”&gt;</span><br><span class=\"line\">&lt;childTable name&#x3D;”c_a” primaryKey&#x3D;”ID” joinKey&#x3D;”customer_id” parentKey&#x3D;”id” &#x2F;&gt;</span><br><span class=\"line\">&lt;&#x2F;table&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>–childTable 标签用于定义 E-R 分片的子表。通过标签上的属性与父表进行关联。<br>\n–name 子表的名称<br>\n–joinKey 子表中字段的名称<br>\n–parentKey 父表中字段名称<br>\n–primaryKey 同 Table<br>\n–needAddLimit 同 Table</p>\n<p>3、dataNode 标签</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dataNode name&#x3D;”dn1″ dataHost&#x3D;”localhost1″ database&#x3D;”db1″ &#x2F;&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">&#96;&#96;&#96;  </span><br><span class=\"line\"></span><br><span class=\"line\">datanode标签定义了mycat中的数据节点，也就是我们所说的数据分片。一个datanode标签就是一个独立的数据分片。</span><br><span class=\"line\">例子中的表述的意思为，使用名字为localhost1数据库实例上的db1物理数据库，这就组成一个数据分片，最后我们用dn1来标示这个分片。  </span><br><span class=\"line\">–name 定义数据节点的名字，这个名字需要唯一。我们在table标签上用这个名字来建立表与分片对应的关系  </span><br><span class=\"line\">–dataHost 用于定义该分片属于哪个数据库实例，属性与datahost标签上定义的name对应  </span><br><span class=\"line\">–database 用于定义该分片属于数据库实例上 的具体库。  </span><br><span class=\"line\"></span><br><span class=\"line\">4、dataHost标签  </span><br><span class=\"line\">这个标签直接定义了具体数据库实例，读写分离配置和心跳语句。  </span><br></pre></td></tr></table></figure>\n<dataHost name=”localhost1″ maxCon=”1000″ minCon=”10″ balance=”0″ writeType=”0″ dbType=”mysql” dbDriver=”native” switchType=”1″ slaveThreshold=”100″>\n<heartbeat>select user()</heartbeat>\n<writeHost host=”hostM1″ url=”192.168.1.100:3306″ user=”root” password=”123456″>\n<readHost host=”hostS1″ url=”192.168.1.101:3306″ user=”root” password=”123456″ />\n</writeHost>\n</dataHost>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">–name 唯一标示dataHost标签，供上层使用  </span><br><span class=\"line\">–maxCon 指定每个读写实例连接池的最大连接  </span><br><span class=\"line\">–minCon 指定每个读写实例连接池的最小连接，初始化连接池的大小  </span><br><span class=\"line\">–balance 负载均称类型  </span><br><span class=\"line\">balance&#x3D;”0″：不开启读写分离机制，所有读操作都发送到当前可用的writeHost上  </span><br><span class=\"line\">balance&#x3D;”1″：全部的readHost与stand by writeHost参与select语句的负载均衡，简单的说，当双主双从模式（M1-S1，M2-S2 并且M1 M2互为主备），正常情况下，M2,S1,S2都参与select语句的负载均衡。</span><br><span class=\"line\">balance&#x3D;”2″：所有读操作都随机的在writeHost、readHost上分发</span><br><span class=\"line\">balance&#x3D;”3″：所有读请求随机的分发到writeHst对应的readHost执行，writeHost不负担读写压力。（1.4之后版本有）  </span><br><span class=\"line\">–writeType 负载均衡类型   </span><br><span class=\"line\">writeType&#x3D;”0″, 所有写操作发送到配置的第一个 writeHost，第一个挂了切到还生存的第二个writeHost，重新启动后已切换后的为准，切换记录在配置文件中:dnindex.properties .</span><br><span class=\"line\">writeType&#x3D;”1″，所有写操作都随机的发送到配置的 writeHost。1.5以后版本废弃不推荐。</span><br><span class=\"line\">–switchType -1不自动切换  </span><br><span class=\"line\">1 默认值 自动切换  </span><br><span class=\"line\">2 基于MySql主从同步的状态决定是否切换心跳语句为 show slave status  </span><br><span class=\"line\">3 基于mysql galary cluster 的切换机制（适合集群）  1.4.1 心跳语句为 show status like ‘wsrep%’</span><br><span class=\"line\">–dbType 指定后端链接的数据库类型目前支持二进制的mysql协议，还有其他使用jdbc链接的数据库，例如：mongodb，oracle，spark等    </span><br><span class=\"line\">–dbDriver 指定连接后段数据库使用的driver，目前可选的值有native和JDBC。使用native的话，因为这个值执行的是二进制的mysql协议，所以可以使用mysql和maridb，其他类型的则需要使用JDBC驱动来支持。  </span><br><span class=\"line\">如果使用JDBC的话需要符合JDBC4标准的驱动jar 放到mycat\\lib目录下，并检查驱动jar包中包括如下目录结构文件 META-INF\\services\\java.sql.Driver。 在这个文件写上具体的driver类名，例如com.mysql.jdbc.Driver</span><br><span class=\"line\">writeHost readHost指定后端数据库的相关配置给mycat，用于实例化后端连接池。  </span><br><span class=\"line\">–tempReadHostAvailable  </span><br><span class=\"line\">如果配置了这个属性 writeHost 下面的 readHost 仍旧可用，默认 0 可配置（0、1）。  </span><br><span class=\"line\"></span><br><span class=\"line\">1）heartbeat标签  </span><br><span class=\"line\">这个标签内指明用于和后端数据库进行心跳检查的语句。</span><br><span class=\"line\">例如：MYSQL 可以使用 select user()，Oracle 可以使用 select 1 from dual 等。  </span><br><span class=\"line\">2） writeHost &#x2F;readHost 标签  </span><br><span class=\"line\">这两个标签都指定后端数据库的相关配置，用于实例化后端连接池。唯一不同的是，writeHost 指定写实例、readHost 指定读实例。  </span><br><span class=\"line\">在一个 dataHost 内可以定义多个 writeHost 和 readHost。但是，如果 writeHost 指定的后端数据库宕机，那么这个 writeHost 绑定的所有 readHost 都将不可用。  </span><br><span class=\"line\">另一方面，由于这个 writeHost 宕机，系统会自动的检测到，并切换到备用的 writeHost 上去。这两个标签的属性相同，这里就一起介绍。  </span><br><span class=\"line\"></span><br><span class=\"line\">–host 用于标识不同实例，一般 writeHost 我们使用*M1，readHost 我们用*S1。  </span><br><span class=\"line\">–url 后端实例连接地址。Native：地址：端口 JDBC：jdbc的url  </span><br><span class=\"line\">–password 后端存储实例需要的密码  </span><br><span class=\"line\">–user 后端存储实例需要的用户名字  </span><br><span class=\"line\">–weight 权重 配置在 readhost 中作为读节点的权重  </span><br><span class=\"line\">–usingDecrypt 是否对密码加密，默认0。具体加密方法看官方文档。  </span><br><span class=\"line\">四： Rule.xml  </span><br><span class=\"line\">ule.xml 里面就定义了我们对表进行拆分所涉及到的规则定义。我们可以灵活的对表使用不同的分片算法，或者对表使用相同的算法但具体的参数不同。 包含的标签 tableRule 和 function。  </span><br><span class=\"line\"></span><br><span class=\"line\">1.tableRule 标签</span><br><span class=\"line\"></span><br><span class=\"line\">这个标签定义表规则。  </span><br><span class=\"line\">定义的表规则，在 schema.xml：  </span><br></pre></td></tr></table></figure>\n<tableRule name=”rule1″>\n<rule>\n<columns>id</columns>\n<algorithm>func1</algorithm>\n</rule>\n</tableRule>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">–name 属性指定唯一的名字，用于标识不同的表规则。 内嵌的 rule 标签则指定对物理表中的哪一列进行拆分和使用什么路由算法。  </span><br><span class=\"line\">–columns 内指定要拆分的列名字。  </span><br><span class=\"line\">–algorithm 使用 function 标签中的 name 属性。连接表规则和具体路由算法。当然，多个表规则可以连接到 同一个路由算法上。table 标签内使用。让逻辑表使用这个规则进行分片。  </span><br><span class=\"line\">2.function 标签  </span><br></pre></td></tr></table></figure>\n<function name=”hash-int” class=”org.opencloudb.route.function.PartitionByFileMap”>\n<property name=”mapFile”>partition-hash-int.txt</property>\n</function>\n```\n<p>–name 指定算法的名字。<br>\n–class 制定路由算法具体的类名字。<br>\n–property 为具体算法需要用到的一些属性</p>\n",
            "tags": [
                "mysql"
            ]
        },
        {
            "id": "http://www.startanew.cn/2020/07/13/mysql-%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/",
            "url": "http://www.startanew.cn/2020/07/13/mysql-%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/",
            "title": "mysql 主从复制",
            "date_published": "2020-07-13T08:19:27.000Z",
            "content_html": "<h4 id=\"复制原理\"><a class=\"markdownIt-Anchor\" href=\"#复制原理\">#</a> 复制原理</h4>\n<ol>\n<li>Master 将数据改变记录到二进制日志 (binary log) 中，也就是配置文件 log-bin 指定的文件，这些记录叫做二进制日志事件 (binary log events)</li>\n<li>Slave 通过 I/O 线程读取 Master 中的 binary log events 并写入到它的中继日志 (relay log)</li>\n<li>Slave 重做中继日志中的事件，把中继日志中的事件信息一条一条的在本地执行一次，完成数据在本地的存储，从而实现将改变反映到它自己的数据 (数据重放)</li>\n</ol>\n<a id=\"more\"></a>\n<p>要求</p>\n<ol>\n<li>主从服务器操作系统版本和位数一致</li>\n<li>Master 和 Slave 数据库的版本要一致</li>\n<li>Master 和 Slave 数据库中的数据要一致</li>\n<li>Master 开启二进制日志，Master 和 Slave 的 server_id 在局域网内必须唯一</li>\n</ol>\n<h4 id=\"一主一从配置\"><a class=\"markdownIt-Anchor\" href=\"#一主一从配置\">#</a> 一主一从配置</h4>\n<p>进入 conf 目录中编辑 my.cnf<br>\n 主：172…18.12.1<br>\n 从：172…18.12.2</p>\n<p>主配置文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client] </span><br><span class=\"line\">port&#x3D;3306 </span><br><span class=\"line\">default-character-set&#x3D;utf8</span><br><span class=\"line\">[mysql] </span><br><span class=\"line\">default-character-set&#x3D;utf8</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">character_set_server&#x3D;utf8</span><br><span class=\"line\">sql_mode&#x3D;NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class=\"line\">#配置大小写不敏感</span><br><span class=\"line\">lower_case_table_names&#x3D;1</span><br><span class=\"line\">server_id&#x3D;1 ###服务器id</span><br><span class=\"line\">log-bin&#x3D;mysql-bin ###开启日志文件</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置说明:# </span><br><span class=\"line\">不同步哪些数据库  </span><br><span class=\"line\">binlog-ignore-db &#x3D; mysql  </span><br><span class=\"line\">binlog-ignore-db &#x3D; test  </span><br><span class=\"line\">binlog-ignore-db &#x3D; information_schema  </span><br><span class=\"line\">#只同步哪些数据库，除此之外，其他不同步  </span><br><span class=\"line\">binlog-do-db &#x3D; order</span><br><span class=\"line\">##设置server_id，一般设置为IP,注意要唯一</span><br><span class=\"line\">server_id&#x3D;1</span><br><span class=\"line\">##复制过滤：也就是指定哪个数据库不用同步（mysql库一般不同步）</span><br><span class=\"line\">binlog-ignore-db&#x3D;mysql</span><br><span class=\"line\">##开启二进制日志功能，可以随便取，最好有含义（关键就是这里了）</span><br><span class=\"line\">log-bin&#x3D;mysql-bin</span><br><span class=\"line\">##为每个session 分配的内存，在事务过程中用来存储二进制日志的缓存</span><br><span class=\"line\">binlog_cache_size&#x3D;1M</span><br><span class=\"line\">##主从复制的格式（mixed,statement,row，默认格式是statement）</span><br><span class=\"line\">binlog_format&#x3D;mixed</span><br><span class=\"line\">##二进制日志自动删除&#x2F;过期的天数。默认值为0，表示不自动删除。</span><br><span class=\"line\">expire_logs_days&#x3D;7</span><br><span class=\"line\">##跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。</span><br><span class=\"line\">##如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致</span><br><span class=\"line\">slave_skip_errors&#x3D;1062</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>授予从机权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;密码&#39;;</span><br><span class=\"line\">mysql&gt;flush privileges; #刷新权限</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>指定 ip</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;CREATE USER &#39;用户名&#39;@&#39;%&#39; IDENTIFIED BY &#39;密码&#39;; #创建用户</span><br><span class=\"line\">mysql&gt;GRANT REPLICATION SLAVE ON *.* TO &#39;用户名&#39;@&#39;%&#39;; #分配REPLICATION(主从复制)权限</span><br><span class=\"line\">mysql&gt;flush privileges; #刷新权限</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>从配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">port&#x3D;3306 </span><br><span class=\"line\">default-character-set&#x3D;utf8</span><br><span class=\"line\">[mysql] </span><br><span class=\"line\">default-character-set&#x3D;utf8</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">character_set_server&#x3D;utf8</span><br><span class=\"line\">sql_mode&#x3D;NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class=\"line\">#配置大小写不敏感</span><br><span class=\"line\">lower_case_table_names&#x3D;1</span><br><span class=\"line\">server_id&#x3D;2 ###服务器id </span><br><span class=\"line\">log-bin&#x3D;mysql-bin ###开启日志文件</span><br></pre></td></tr></table></figure>\n<p>连接到主服务器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show master status;（查询主状态信息）</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>连接从服务器</p>\n<p>同步主服务器配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">change master to master_host&#x3D;&#39;172.18.12.1&#39;,master_user&#x3D;&#39;root&#39;,master_password&#x3D;&#39;root&#39;,</span><br><span class=\"line\">master_log_file&#x3D;&#39;mysql-bin.000005&#39;,master_log_pos&#x3D;1188;</span><br></pre></td></tr></table></figure>\n<p>配置说明</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">master_host为主库IP，master_user,master_password为主库用户名和密码，master_log_file和master_log_pos就是上图的这个File和Position</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>开始同步 start slave;</p>\n<p>检查从服务器复制功能状态 SHOW SLAVE STATUS; （Slave_IO_Running 、Slave_SQL_Running 都为 Yes 说明配置成功）</p>\n<p>从机挂掉后重启后，可能会复制失败，可用执行 reset slave; 清空然后再  start slave; 重新配置主机时，需要先 stop slave; 再 change master to  …</p>\n<h4 id=\"双主双从配置\"><a class=\"markdownIt-Anchor\" href=\"#双主双从配置\">#</a> 双主双从配置</h4>\n<p>主配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client] </span><br><span class=\"line\">port&#x3D;3306 </span><br><span class=\"line\">default-character-set&#x3D;utf8</span><br><span class=\"line\">[mysql] </span><br><span class=\"line\">default-character-set&#x3D;utf8</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">character_set_server&#x3D;utf8</span><br><span class=\"line\">sql_mode&#x3D;NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class=\"line\">#配置大小写不敏感</span><br><span class=\"line\">lower_case_table_names&#x3D;1</span><br><span class=\"line\">server_id&#x3D;2 ###服务器id</span><br><span class=\"line\">log-bin&#x3D;mysql-bin ###开启日志文件</span><br><span class=\"line\">auto_increment_increment&#x3D;2</span><br><span class=\"line\">auto_increment_offset&#x3D;2</span><br><span class=\"line\">binlog_format&#x3D;mixed</span><br><span class=\"line\">expire_logs_days&#x3D;7</span><br><span class=\"line\">##relay_log配置中继日志</span><br><span class=\"line\">relay_log&#x3D;edu-mysql-relay-bin</span><br><span class=\"line\">##log_slave_updates表示slave将复制事件写进自己的二进制日志2</span><br><span class=\"line\">log_slave_updates&#x3D;1</span><br><span class=\"line\">##防止改变数据(除了特殊的线程) </span><br><span class=\"line\">read_only&#x3D;1</span><br><span class=\"line\">slave_skip_errors&#x3D;1062</span><br></pre></td></tr></table></figure>\n<p>在两个主机上都执行一次主从复制的步骤即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">主从复制语句备份</span><br><span class=\"line\"></span><br><span class=\"line\">CREATE TABLE &#96;user&#96; ( </span><br><span class=\"line\">&#96;user_id&#96; bigint(20) AUTO_INCREMENT,</span><br><span class=\"line\">&#96;username&#96; varchar(30) NOT NULL,</span><br><span class=\"line\">&#96;password&#96; varchar(30) DEFAULT NULL,</span><br><span class=\"line\">PRIMARY KEY (&#96;user_id&#96;)</span><br><span class=\"line\">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br><span class=\"line\"></span><br><span class=\"line\">grant replication slave, replication client on *.* to &#39;root&#39;@&#39;172.18.12.2&#39; identified by &#39;root&#39;;</span><br><span class=\"line\">grant replication slave, replication client on *.* to &#39;slave&#39;@&#39;172.18.12.3&#39; identified by &#39;slave&#39;;</span><br><span class=\"line\">ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;root&#39;;</span><br><span class=\"line\">flush privileges;</span><br><span class=\"line\">show master status;</span><br><span class=\"line\">change master to </span><br><span class=\"line\">master_host&#x3D;&#39;172.18.12.2&#39;, </span><br><span class=\"line\">master_port&#x3D;3306, </span><br><span class=\"line\">master_user&#x3D;&#39;root&#39;,</span><br><span class=\"line\">master_password&#x3D;&#39;root&#39;,</span><br><span class=\"line\">master_log_file&#x3D;&#39;mysql-bin.000003&#39;,</span><br><span class=\"line\">master_log_pos&#x3D;588;</span><br><span class=\"line\">start slave;</span><br><span class=\"line\">stop slave;</span><br><span class=\"line\">show slave status;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "mysql"
            ]
        },
        {
            "id": "http://www.startanew.cn/2020/07/13/mysql%E4%BC%98%E5%8C%96-%EF%BC%88%E4%B8%89%EF%BC%89/",
            "url": "http://www.startanew.cn/2020/07/13/mysql%E4%BC%98%E5%8C%96-%EF%BC%88%E4%B8%89%EF%BC%89/",
            "title": "mysql优化-（三）",
            "date_published": "2020-07-13T08:08:59.000Z",
            "content_html": "<h4 id=\"sql优化技巧\"><a class=\"markdownIt-Anchor\" href=\"#sql优化技巧\">#</a> SQL 优化技巧</h4>\n<ul>\n<li>使用 group by 分组查询是，默认分组后，还会排序，可能会降低速度，<br>\n在 group by 后面增加 order by null 就可以防止排序.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">explain select * from emp  group by deptno order by null;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li>有些情况下，可以使用连接来替代子查询。因为使用 join，MySQL 不需要在内存中创建临时表。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from dept, emp where dept.deptno&#x3D;emp.deptno; [简单处理方式]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from dept left join emp on dept.deptno&#x3D;emp.deptno;  [左外连接，更ok!]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>对查询进行优化，要尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引，应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select id from t where num is null</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>最好不要给数据库留 NULL，尽可能的使用 NOT NULL 填充数据库.</p>\n<p>备注、描述、评论之类的可以设置为 NULL，其他的，最好不要使用 NULL。</p>\n<p>不要以为 NULL 不需要空间，比如：char (100) 型，在字段建立时，空间就固定了， 不管是否插入值（NULL 也包含在内），都是占用 100 个字符的空间的，如果是 varchar 这样的变长字段， null 不占用空间。</p>\n<p>可以在 num 上设置默认值 0，确保表中 num 列没有 null 值，然后这样查询：</p>\n<p>select id from t where num = 0</p>\n<h5 id=\"mysql数据引擎myisam-innodb-memory\"><a class=\"markdownIt-Anchor\" href=\"#mysql数据引擎myisam-innodb-memory\">#</a> MySQL 数据引擎 myisam /innodb/ memory</h5>\n<p>myisam 存储：如果表对事务要求不高，同时是以查询和添加为主的，我们考虑使用 myisam 存储引擎. , 比如 bbs 中的 发帖表，回复表.</p>\n<p>INNODB 存储：对事务要求高，保存的数据都是重要数据，我们建议使用 INNODB, 比如订单表，账号表.</p>\n<p>MyISAM 和 INNODB 的区别</p>\n<ol>\n<li>事务安全（MyISAM 不支持事务，INNODB 支持事务）</li>\n<li>查询和添加速度（MyISAM 批量插入速度快）</li>\n<li>支持全文索引（MyISAM 支持全文索引，INNODB 不支持全文索引）</li>\n<li>锁机制（MyISAM 时表锁，innodb 是行锁）</li>\n<li>外键 MyISAM 不支持外键， INNODB 支持外键. (在 PHP 开发中，通常不设置外键，通常是在程序中保证数据的一致)</li>\n</ol>\n<p>Memory 存储，比如我们数据变化频繁，不需要入库，同时又频繁的查询和修改，我们考虑使用 memory, 速度极快. （如果 mysql 重启的话，数据就不存在了）</p>\n<center>\n <img data-src=\"http://vps.startanew.cn/1594628294183ifvxx1lk.png\" >\n</center>   \nMyisam注意事项\n<p>如果你的数据库的存储引擎是 myisam, 请一定记住要定时进行碎片整理</p>\n<p>举例说明:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create table test100(id int unsigned ,name varchar(32))engine&#x3D;myisam;</span><br><span class=\"line\"></span><br><span class=\"line\">insert into test100 values(1,’aaaaa’);</span><br><span class=\"line\"></span><br><span class=\"line\">insert into test100 values(2,’bbbb’);</span><br><span class=\"line\"></span><br><span class=\"line\">insert into test100 values(3,’ccccc’);</span><br></pre></td></tr></table></figure>\n<p>我们应该定义对 myisam 进行整理</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">optimize table test100;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "mysql"
            ]
        },
        {
            "id": "http://www.startanew.cn/2020/07/13/mysql%E4%BC%98%E5%8C%96-%EF%BC%88%E4%BA%8C%EF%BC%89/",
            "url": "http://www.startanew.cn/2020/07/13/mysql%E4%BC%98%E5%8C%96-%EF%BC%88%E4%BA%8C%EF%BC%89/",
            "title": "mysql优化-（二）",
            "date_published": "2020-07-13T07:46:25.000Z",
            "content_html": "<h4 id=\"优化方面\"><a class=\"markdownIt-Anchor\" href=\"#优化方面\">#</a> 优化方面</h4>\n<ol>\n<li>表的设计合理化 (符合 3NF)</li>\n<li>添加适当索引 (index) [四种：普通索引、主键索引、唯一索引 unique、全文索引]</li>\n<li>SQL 语句优化</li>\n<li>分表技术 (水平分割、垂直分割)</li>\n<li>读写 [写: update/delete/add] 分离</li>\n<li>存储过程 [模块化编程，可以提高速度]</li>\n<li>对 mysql 配置优化 [配置最大并发数 my.ini, 调整缓存大小]</li>\n<li>mysql 服务器硬件升级</li>\n<li>定时的去清除不需要的数据，定时进行碎片整理 (MyISAM)</li>\n</ol>\n<a id=\"more\"></a>\n<h4 id=\"数据库范式\"><a class=\"markdownIt-Anchor\" href=\"#数据库范式\">#</a> 数据库范式</h4>\n<blockquote>\n<p>概念：为了建立冗余较小、结构合理的数据库，设计数据库时必须遵循一定的规则。在关系型数据库中这种规则就称为范式。范式是符合某一种设计要求的总结。要想设计一个结构合理的关系型数据库，必须满足一定的范式。</p>\n</blockquote>\n<blockquote>\n<p>三大范式</p>\n</blockquote>\n<ul>\n<li>\n<p>第一范式：1NF 是对属性的原子性约束，要求属性 (列) 具有原子性，不可再分解；(只要是关系型数据库都满足 1NF)</p>\n</li>\n<li>\n<p>第二范式：2NF 是对记录的惟一性约束，表中的记录是唯一的，就满足 2NF, 通常我们设计一个主键来实现，主键不能包含业务逻辑。</p>\n</li>\n<li>\n<p>第三范式：3NF 是对字段冗余性的约束，它要求字段没有冗余。 没有冗余的数据库设计可以做到。</p>\n</li>\n</ul>\n<h4 id=\"索引优化\"><a class=\"markdownIt-Anchor\" href=\"#索引优化\">#</a> 索引优化</h4>\n<blockquote>\n<p>索引：索引用来快速地寻找那些具有特定值的记录，所有 MySQL 索引都以 B - 树的形式保存。如果没有索引，执行查询时 MySQL 必须从第一个记录开始扫描整个表的所有记录，直至找到符合要求的记录。表里面的记录数量越多，这个操作的代价就越高。如果作为搜索条件的列上已经创建了索引，MySQL 无需扫描任何记录即可迅速得到目标记录所在的位置。如果表有 1000 个记录，通过索引查找记录至少要比顺序扫描记录快 100 倍。</p>\n</blockquote>\n<ul>\n<li>索引的分类</li>\n</ul>\n<ol>\n<li>主键索引：主键是一种唯一性索引，但它必须指定为 “PRIMARY KEY”。如果你曾经用过 AUTO_INCREMENT 类型的列，你可能已经熟悉主键之类的概念了。主键一般在创建表的时候指定，例如 “CREATE TABLE tablename ( […], PRIMARY KEY (列的列表) ); ”。但是，我们也可以通过修改表的方式加入主键，例如 “ALTER TABLE tablename ADD PRIMARY KEY (列的列表); ”。每个表只能有一个主键。需要查询索引时可以通过以下语句查询。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">desc  表名;   不能显示索引名称</span><br><span class=\"line\"></span><br><span class=\"line\">show index from 表名</span><br><span class=\"line\"></span><br><span class=\"line\">show keys from 表名</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>2 . 全文索引示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE articles (</span><br><span class=\"line\">       id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,</span><br><span class=\"line\">       title VARCHAR(200),</span><br><span class=\"line\">       body TEXT,</span><br><span class=\"line\">       FULLTEXT (title,body)</span><br><span class=\"line\">     )engine&#x3D;myisam charset utf8;</span><br><span class=\"line\">     </span><br></pre></td></tr></table></figure>\n<ul>\n<li>错误用法:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from articles where body like ‘%mysql%’; 错误用法 索引不会生效</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>正确用法:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from articles where match(title,body) against ( ‘database’)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>说明:</p>\n</blockquote>\n<ul>\n<li>在 mysql 中 fulltext 索引只针对 myisam 生效</li>\n<li>mysql 自己提供的 fulltext 针对英文生效 -&gt;sphinx (coreseek) 技术处理中文</li>\n<li>使用方法是 match (字段名…) against (‘关键字’)</li>\n<li>全文索引：停止词，因为在一个文本中，创建索引是一个无穷大的数，因此，对一些常用词和字符，就不会创建，这些词，称为停止词。比如（a，b，mysql，the）mysql&gt; select match (title,body) against (‘database’) from articles;（输出的是每行和 database 的匹配度）</li>\n</ul>\n<hr>\n<p>3 . 唯一索引：这种索引和前面的 “普通索引” 基本相同，但有一个区别：索引列的所有值都只能出现一次，即必须唯一。唯一性索引可以用以下几种方式创建：</p>\n<p>创建索引，例如 CREATE UNIQUE INDEX &lt;索引的名字&gt; ON tablename (列的列表)；</p>\n<p>修改表，例如 ALTER TABLE tablename ADD UNIQUE [索引的名字] (列的列表)；</p>\n<p>创建表的时候指定索引，例如 CREATE TABLE tablename ([…], UNIQUE [索引的名字] (列的列表) )；</p>\n<p>示例：创建表结构</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create table ddd(id int primary key auto_increment , name varchar(32) unique);</span><br></pre></td></tr></table></figure>\n<p>注意</p>\n<p>unique 字段可以为 NULL, 并可以有多 NULL, 但是如果是具体内容，则不能重复，但是不能存有重复的空字符串</p>\n<p>4 . 普通索引：普通索引（由关键字 KEY 或 INDEX 定义的索引）的唯一任务是加快对数据的访问速度。因此，应该只为那些最经常出现在查询条件（WHEREcolumn=）或排序条件（ORDERBYcolumn）中的数据列创建索引。只要有可能，就应该选择一个数据最整齐、最紧凑的数据列（如一个整数类型的数据列）来创建索引。</p>\n<p>示例：创建表结构</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create table ccc( id int unsigned,  name varchar(32));</span><br><span class=\"line\">create index 索引名 on 表 (列1,列名2);</span><br></pre></td></tr></table></figure>\n<h4 id=\"索引实现原理\"><a class=\"markdownIt-Anchor\" href=\"#索引实现原理\">#</a> 索引实现原理</h4>\n <center>\n  <img data-src=\"http://vps.startanew.cn/15946271485746h937ira.png\" >\n </center>    \n数据库索引，是数据库管理系统中一个排序的数据结构，以协助快速查询、更新数据库表中数据。索引的实现通常使用 B 树及其变种 B+ 树。\n<p>在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查找算法。这种数据结构，就是索引。</p>\n<p>为表设置索引要付出代价的：一是增加了数据库的存储空间，二是在插入和修改数据时要花费较多的时间 (因为索引也要随之变动)。</p>\n<p>上图展示了一种可能的索引方式。左边是数据表，一共有两列七条记录，最左边的是数据记录的物理地址（注意逻辑上相邻的记录在磁盘上也并不是一定物理相邻的）。为了加快 Col2 的查找，可以维护一个右边所示的二叉查找树，每个节点分别包含索引键值和一个指向对应数据记录物理地址的指针，这样就可以运用二叉查找在 O (log2n) 的复杂度内获取到相应数据。</p>\n<p>创建索引可以大大提高系统的性能。</p>\n<p>第一，通过创建唯一性索引，可以保证数据库表中每一行数据的唯一性。</p>\n<p>第二，可以大大加快数据的检索速度，这也是创建索引的最主要的原因。</p>\n<p>第三，可以加速表和表之间的连接，特别是在实现数据的参考完整性方面特别有意义。</p>\n<p>第四，在使用分组和排序子句进行数据检索时，同样可以显著减少查询中分组和排序的时间。</p>\n<p>第五，通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能。</p>\n<p>也许会有人要问：增加索引有如此多的优点，为什么不对表中的每一个列创建一个索引呢？因为，增加索引也有许多不利的方面。</p>\n<p>第一，创建索引和维护索引要耗费时间，这种时间随着数据量的增加而增加。</p>\n<p>第二，索引需要占物理空间，除了数据表占数据空间之外，每一个索引还要占一定的物理空间，如果要建立聚簇索引，那么需要的空间就会更大。</p>\n<p>第三，当对表中的数据进行增加、删除和修改的时候，索引也要动态的维护，这样就降低了数据的维护速度。</p>\n<p>索引是建立在数据库表中的某些列的上面。在创建索引的时候，应该考虑在哪些列上可以创建索引，在哪些列上不能创建索引。一般来说，应该在这些列上创建索引：在经常需要搜索的列上，可以加快搜索的速度；在作为主键的列上，强制该列的唯一性和组织表中数据的排列结构；在经常用在连接的列上，这些列主要是一些外键，可以加快连接的速度；在经常需要根据范围进行搜索的列上创建索引，因为索引已经排序，其指定的范围是连续的；在经常需要排序的列上创建索引，因为索引已经排序，这样查询可以利用索引的排序，加快排序查询时间；在经常使用在 WHERE 子句中的列上面创建索引，加快条件的判断速度。</p>\n<p>同样，对于有些列不应该创建索引。一般来说，不应该创建索引的的这些列具有下列特点：</p>\n<p>第一，对于那些在查询中很少使用或者参考的列不应该创建索引。这是因为，既然这些列很少使用到，因此有索引或者无索引，并不能提高查询速度。相反，由于增加了索引，反而降低了系统的维护速度和增大了空间需求。</p>\n<p>第二，对于那些只有很少数据值的列也不应该增加索引。这是因为，由于这些列的取值很少，例如人事表的性别列，在查询的结果中，结果集的数据行占了表中数据行的很大比例，即需要在表中搜索的数据行的比例很大。增加索引，并不能明显加快检索速度。</p>\n<p>第三，对于那些定义为 text, image 和 bit 数据类型的列不应该增加索引。这是因为，这些列的数据量要么相当大，要么取值很少。</p>\n<p>第四，当修改性能远远大于检索性能时，不应该创建索引。这是因为，修改性能和检索性能是互相矛盾的。当增加索引时，会提高检索性能，但是会降低修改性能。当减少索引时，会提高修改性能，降低检索性能。因此，当修改性能远远大于检索性能时，不应该创建索引。</p>\n<p>根据数据库的功能，可以在数据库设计器中创建三种索引：唯一索引、主键索引和聚集索引。</p>\n<p>唯一索引</p>\n<p>唯一索引是不允许其中任何两行具有相同索引值的索引。</p>\n<p>当现有数据中存在重复的键值时，大多数数据库不允许将新创建的唯一索引与表一起保存。数据库还可能防止添加将在表中创建重复键值的新数据。例如，如果在 employee 表中职员的姓 (lname) 上创建了唯一索引，则任何两个员工都不能同姓。主键索引数据库表经常有一列或列组合，其值唯一标识表中的每一行。该列称为表的主键。在数据库关系图中为表定义主键将自动创建主键索引，主键索引是唯一索引的特定类型。该索引要求主键中的每个值都唯一。当在查询中使用主键索引时，它还允许对数据的快速访问。聚集索引在聚集索引中，表中行的物理顺序与键值的逻辑（索引）顺序相同。一个表只能包含一个聚集索引。</p>\n<p>如果某索引不是聚集索引，则表中行的物理顺序与键值的逻辑顺序不匹配。与非聚集索引相比，聚集索引通常提供更快的数据访问速度。</p>\n<p>局部性原理与磁盘预读</p>\n<p>由于存储介质的特性，磁盘本身存取就比主存慢很多，再加上机械运动耗费，磁盘的存取速度往往是主存的几百分分之一，因此为了提高效率，要尽量减少磁盘 I/O。为了达到这个目的，磁盘往往不是严格按需读取，而是每次都会预读，即使只需要一个字节，磁盘也会从这个位置开始，顺序向后读取一定长度的数据放入内存。这样做的理论依据是计算机科学中著名的局部性原理：当一个数据被用到时，其附近的数据也通常会马上被使用。程序运行期间所需要的数据通常比较集中。</p>\n<p>由于磁盘顺序读取的效率很高（不需要寻道时间，只需很少的旋转时间），因此对于具有局部性的程序来说，预读可以提高 I/O 效率。</p>\n<p>预读的长度一般为页（page）的整倍数。页是计算机管理存储器的逻辑块，硬件及操作系统往往将主存和磁盘存储区分割为连续的大小相等的块，每个存储块称为一页（在许多操作系统中，页得大小通常为 4k），主存和磁盘以页为单位交换数据。当程序要读取的数据不在主存中时，会触发一个缺页异常，此时系统会向磁盘发出读盘信号，磁盘会找到数据的起始位置并向后连续读取一页或几页载入内存中，然后异常返回，程序继续运行。</p>\n<p>B-/+Tree 索引的性能分析</p>\n<p>到这里终于可以分析 B-/+Tree 索引的性能了。</p>\n<p>上文说过一般使用磁盘 I/O 次数评价索引结构的优劣。先从 B-Tree 分析，根据 B-Tree 的定义，可知检索一次最多需要访问 h 个节点。数据库系统的设计者巧妙利用了磁盘预读原理，将一个节点的大小设为等于一个页，这样每个节点只需要一次 I/O 就可以完全载入。为了达到这个目的，在实际实现 B-Tree 还需要使用如下技巧：</p>\n<p>每次新建节点时，直接申请一个页的空间，这样就保证一个节点物理上也存储在一个页里，加之计算机存储分配都是按页对齐的，就实现了一个 node 只需一次 I/O。</p>\n<p>B-Tree 中一次检索最多需要 h-1 次 I/O（根节点常驻内存），渐进复杂度为 O (h)=O (logdN)。一般实际应用中，出度 d 是非常大的数字，通常超过 100，因此 h 非常小（通常不超过 3）。</p>\n<p>而红黑树这种结构，h 明显要深的多。由于逻辑上很近的节点（父子）物理上可能很远，无法利用局部性，所以红黑树的 I/O 渐进复杂度也为 O (h)，效率明显比 B-Tree 差很多。</p>\n<p>综上所述，用 B-Tree 作为索引结构效率是非常高的。</p>\n<p>应该花时间学习 B - 树和 B+ 树数据结构</p>\n<p>=============================================================================================================</p>\n<p>1）B 树</p>\n<p>B 树中每个节点包含了键值和键值对于的数据对象存放地址指针，所以成功搜索一个对象可以不用到达树的叶节点。</p>\n<p>成功搜索包括节点内搜索和沿某一路径的搜索，成功搜索时间取决于关键码所在的层次以及节点内关键码的数量。</p>\n<p>在 B 树中查找给定关键字的方法是：首先把根结点取来，在根结点所包含的关键字 K1,…,kj 查找给定的关键字（可用顺序查找或二分查找法），若找到等于给定值的关键字，则查找成功；否则，一定可以确定要查的关键字在某个 Ki 或 Ki+1 之间，于是取 Pi 所指的下一层索引节点块继续查找，直到找到，或指针 Pi 为空时查找失败。</p>\n<p>2）B+ 树</p>\n<p>B+ 树非叶节点中存放的关键码并不指示数据对象的地址指针，非也节点只是索引部分。所有的叶节点在同一层上，包含了全部关键码和相应数据对象的存放地址指针，且叶节点按关键码从小到大顺序链接。如果实际数据对象按加入的顺序存储而不是按关键码次数存储的话，叶节点的索引必须是稠密索引，若实际数据存储按关键码次序存放的话，叶节点索引时稀疏索引。</p>\n<p>B+ 树有 2 个头指针，一个是树的根节点，一个是最小关键码的叶节点。</p>\n<p>所以 B+ 树有两种搜索方法：</p>\n<p>一种是按叶节点自己拉起的链表顺序搜索。</p>\n<p>一种是从根节点开始搜索，和 B 树类似，不过如果非叶节点的关键码等于给定值，搜索并不停止，而是继续沿右指针，一直查到叶节点上的关键码。所以无论搜索是否成功，都将走完树的所有层。</p>\n<p>B+ 树中，数据对象的插入和删除仅在叶节点上进行。</p>\n<p>这两种处理索引的数据结构的不同之处：<br>\na，B 树中同一键值不会出现多次，并且它有可能出现在叶结点，也有可能出现在非叶结点中。而 B+ 树的键一定会出现在叶结点中，并且有可能在非叶结点中也有可能重复出现，以维持 B+ 树的平衡。<br>\nb，因为 B 树键位置不定，且在整个树结构中只出现一次，虽然可以节省存储空间，但使得在插入、删除操作复杂度明显增加。B+ 树相比来说是一种较好的折中。<br>\nc，B 树的查询效率与键在树中的位置有关，最大时间复杂度与 B+ 树相同 (在叶结点的时候)，最小时间复杂度为 1 (在根结点的时候)。而 B+ 树的时候复杂度对某建成的树是固定的。可以扫描 2 的次方。</p>\n<h4 id=\"索引的代价\"><a class=\"markdownIt-Anchor\" href=\"#索引的代价\">#</a> 索引的代价</h4>\n<p>占用磁盘空间</p>\n<p>对 DML (update、delete、insert) 语句的效率影响</p>\n<p>增删改会对索引影响，因为索引要重新整理。</p>\n<table>\n<thead>\n<tr>\n<th>存储引擎</th>\n<th>允许的索引类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Myisam</td>\n<td>btree</td>\n</tr>\n<tr>\n<td>Innodb</td>\n<td>btree</td>\n</tr>\n<tr>\n<td>memory/yeap</td>\n<td>Hash,btree</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"适合添加索引的列\"><a class=\"markdownIt-Anchor\" href=\"#适合添加索引的列\">#</a> 适合添加索引的列</h4>\n<p>查询作为查询条件字段应该创建索引<br>\n唯一性太差的字段不适合单独创建索引，即使频繁</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Select * from emp where sex&#x3D;’男’</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>频繁更新字段，也不要定义索引。</p>\n</li>\n<li>\n<p>不会出现在 where 语句的字段不要创建索引</p>\n</li>\n<li>\n<p>总结：满处一下条件的字段，才应该创建索引</p>\n</li>\n<li>\n<p>肯定在 where 条件经常使用</p>\n</li>\n<li>\n<p>该字段的内容不是唯一的几个值</p>\n</li>\n<li>\n<p>字段内容不是频繁变化</p>\n</li>\n</ul>\n<h4 id=\"注意事项\"><a class=\"markdownIt-Anchor\" href=\"#注意事项\">#</a> 注意事项</h4>\n<p>创建一个联合索引</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table dept add index my_ind (dname,loc); &#x2F;&#x2F;  dname 左边的列,loc就是右边的列</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>注意:</p>\n<p>对于创建的多列索引，如果不是使用第一部分，则不会创建索引。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">explain select * from dept where loc&#x3D;’aaa’\\G</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>就不会使用到索引</p>\n<p>模糊查询在 like 前面有百分号开头会失效。<br>\n如果条件中有 or，即使其中有条件带索引也不会使用。换言之，就是要求使用的所有字段，都必须建立索引，我们建议大家尽量避免使用 or 关键字<br>\n如果列类型是字符串，那一定要在条件中将数据使用引号引用起来。否则不使用索引。(添加时，字符串必须’’), 也就是，如果列是字符串类型，就一定要用 ‘’ 把他包括起来.<br>\n 如果 mysql 估计使用全表扫描要比使用索引快，则不使用索引。</p>\n<h4 id=\"查询所用使用率\"><a class=\"markdownIt-Anchor\" href=\"#查询所用使用率\">#</a> 查询所用使用率</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show status like ‘handler_read%’;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>注意：<br>\nhandler_read_key: 这个值越高越好，越高表示使用索引查询到的次数。</p>\n<p>handler_read_rnd_next: 这个值越高，说明查询低效。</p>\n",
            "tags": [
                "mysql"
            ]
        },
        {
            "id": "http://www.startanew.cn/2020/07/13/mysql-%E4%BC%98%E5%8C%96%EF%BC%88%E4%B8%80%EF%BC%89/",
            "url": "http://www.startanew.cn/2020/07/13/mysql-%E4%BC%98%E5%8C%96%EF%BC%88%E4%B8%80%EF%BC%89/",
            "title": "mysql 优化（一）",
            "date_published": "2020-07-13T07:36:00.000Z",
            "content_html": "<h4 id=\"存储过程\"><a class=\"markdownIt-Anchor\" href=\"#存储过程\">#</a> 存储过程</h4>\n<blockquote>\n<p>存储过程（Stored Procedure）是在大型数据库系统中，一组为了完成特定功能的 SQL 语句集，它存储在数据库中，一次编译后永久有效，用户通过指定存储过程的名字并给出参数（如果该存储过程带有参数）来执行它。存储过程是数据库中的一个重要对象。在数据量特别庞大的情况下利用存储过程能达到倍速的效率提升</p>\n</blockquote>\n<a id=\"more\"></a>\n<h4 id=\"存储过程特点\"><a class=\"markdownIt-Anchor\" href=\"#存储过程特点\">#</a> 存储过程特点</h4>\n<blockquote>\n<p>有输入输出参数，可以声明变量，有 if/else, case,while 等控制语句，通过编写存储过程，可以实现复杂的逻辑功能<br>\n函数的普遍特性：模块化，封装，代码复用<br>\n速度快，只有首次执行需经过编译和优化步骤，后续被调用可以直接执行，省去以上步骤；</p>\n</blockquote>\n<h4 id=\"存储过程创建于调用\"><a class=\"markdownIt-Anchor\" href=\"#存储过程创建于调用\">#</a> 存储过程创建于调用</h4>\n<ul>\n<li>创建无参存储过程</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create procedure userPorced ()</span><br><span class=\"line\">begin</span><br><span class=\"line\">select name from users;</span><br><span class=\"line\">end;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>调用存储过程</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">call  userPorced ();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建有参存储过程</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create procedure userPorced ( in a int(10) )</span><br><span class=\"line\">begin</span><br><span class=\"line\">select name from users where age&gt;a;</span><br><span class=\"line\">end;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>调用存储过程</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">call  userPorced (10);</span><br></pre></td></tr></table></figure>\n<h4 id=\"存储过程优缺点\"><a class=\"markdownIt-Anchor\" href=\"#存储过程优缺点\">#</a> 存储过程优缺点</h4>\n<ul>\n<li>优点</li>\n</ul>\n<ol>\n<li>在生产环境下，可以通过直接修改存储过程的方式修改业务逻辑（或 bug），而不用重启服务器。</li>\n<li>执行速度快。存储过程经过编译之后会比单独一条一条执行要快。</li>\n<li>减少网络传输。存储过程直接就在数据库服务器上跑，所有的数据访问都在服务器内部进行，不需要传输数据到其它终端。</li>\n</ol>\n<ul>\n<li>缺点</li>\n</ul>\n<ol>\n<li>SQL 本身是一种结构化查询语言，加上了一些控制（赋值、循环和异常处理等），但不是 OO 的，本质上还是过程化的，面对复杂的业务逻辑，过程化的处理会很吃力。这一点算致命伤。</li>\n<li>不便于调试。</li>\n<li>没办法应用缓存。虽然有全局临时表之类的方法可以做缓存，但同样加重了数据库的负担。</li>\n<li>无法适应数据库的切割（水平或垂直切割）。数据库切割之后，存储过程并不清楚数据存储在哪个数据库中。</li>\n</ol>\n<h4 id=\"慢查询\"><a class=\"markdownIt-Anchor\" href=\"#慢查询\">#</a> 慢查询</h4>\n<blockquote>\n<p>概念：MySQL 默认 10 秒内没有响应 SQL 结果，则为慢查询，可以去修改 MySQL 慢查询默认时间</p>\n</blockquote>\n<blockquote>\n<p>慢查询的修改有查看：</p>\n</blockquote>\n<blockquote>\n<p>查看慢查询的时间  show variables like ‘long_query_time’;</p>\n</blockquote>\n<blockquote>\n<p>修改慢查询的时间 set long_query_time=1; （重启后失效）</p>\n</blockquote>\n<h4 id=\"将慢查询写入日志\"><a class=\"markdownIt-Anchor\" href=\"#将慢查询写入日志\">#</a> 将慢查询写入日志</h4>\n<blockquote>\n<p>MySQL 慢查询的相关参数解释：</p>\n</blockquote>\n<ul>\n<li>\n<p>slow_query_log    ：是否开启慢查询日志，1 表示开启，0 表示关闭。</p>\n</li>\n<li>\n<p>log-slow-queries  ：旧版（5.6 以下版本）MySQL 数据库慢查询日志存储路径。可以不设置该参数，系统则会默认给一个缺省的文件 host_name-slow.log</p>\n</li>\n<li>\n<p>slow-query-log-file：新版（5.6 及以上版本）MySQL 数据库慢查询日志存储路径。可以不设置该参数，系统则会默认给一个缺省的文件 host_name-slow.log</p>\n</li>\n<li>\n<p>long_query_time ：慢查询阈值，当查询时间多于设定的阈值时，记录日志。</p>\n</li>\n<li>\n<p>log_queries_not_using_indexes：未使用索引的查询也被记录到慢查询日志中（可选项）。</p>\n</li>\n<li>\n<p>log_output：日志存储方式。log_output=’FILE’表示将日志存入文件，默认值是’FILE’。log_output=’TABLE’表示将日志存入数据库，这样日志信息就会被写入到 mysql.slow_log 表中。MySQL 数据库支持同时两种日志存储方式，配置的时候以逗号隔开即可，如：log_output=’FILE,TABLE’。日志记录到系统的专用日志表中，要比记录到文件耗费更多的系统资源，因此对于需要启用慢查询日志，又需要能够获得更高的系统性能，那么建议优先记录到文件。</p>\n</li>\n</ul>\n<blockquote>\n<p>开启慢查询日志: set global slow_query_log=1（重启后失效）</p>\n</blockquote>\n<blockquote>\n<p>修改 my.cnf 文件方式:</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">slow_query_log &#x3D;1</span><br><span class=\"line\"></span><br><span class=\"line\">slow_query_log_file&#x3D;&#x2F;tmp&#x2F;mysql_slow.log</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>log-queries-not-using-indexes：未使用索引的查询也被记录到慢查询日志中（可选项）。如果调优的话，建议开启这个选项。另外，开启了这个参数，其实使用 full index scan 的 sql 也会被记录到慢查询日志。</p>\n</blockquote>\n<blockquote>\n<p>log_slow_admin_statements: 表示是否将慢管理语句例如 ANALYZE TABLE 和 ALTER TABLE 等记入慢查询日志</p>\n</blockquote>\n<ul>\n<li>show status</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql数据库启动了多少时间</span><br><span class=\"line\"></span><br><span class=\"line\">show status like &#39;uptime&#39;;</span><br><span class=\"line\">show  stauts like &#39;com_select&#39; </span><br><span class=\"line\">show stauts like &#39;com_insert&#39;</span><br><span class=\"line\"> ...类推 </span><br><span class=\"line\">update  delete（显示数据库的查询，更新，添加，删除的次数）</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show [session|global] status like .... </span><br><span class=\"line\">如果你不写  [session|global] 默认是session 会话，指取出当前窗口的执行，</span><br><span class=\"line\">如果你想看所有(从mysql 启动到现在，则应该 global)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>显示到 mysql 数据库的连接数</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show status like  &#39;connections &#39;;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>显示慢查询次数</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show status like &#39;slow_queries&#39;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "mysql"
            ]
        },
        {
            "id": "http://www.startanew.cn/2020/07/12/Mysql%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/",
            "url": "http://www.startanew.cn/2020/07/12/Mysql%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/",
            "title": "Mysql开启远程连接",
            "date_published": "2020-07-12T14:12:00.000Z",
            "content_html": "<h1 id=\"80以下版本\"><a class=\"markdownIt-Anchor\" href=\"#80以下版本\">#</a> 8.0 以下版本</h1>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#允许所有用户远程访问 修改用户名和密码为你自己的</span><br><span class=\"line\">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &#39;USERNAME&#39;@&#39;%&#39; IDENTIFIED BY &#39;PASSWORD&#39; WITH GRANT OPTION;</span><br><span class=\"line\">#允许单个ip 修改用户名和密码为你自己的</span><br><span class=\"line\">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &#39;USERNAME&#39;@&#39;1.2.3.4&#39; IDENTIFIED BY &#39;PASSWORD&#39; WITH GRANT OPTION;</span><br><span class=\"line\">#最后 mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>  \n<h1 id=\"80版本\"><a class=\"markdownIt-Anchor\" href=\"#80版本\">#</a> 8.0 版本</h1>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE USER &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;root&#39;;</span><br><span class=\"line\">## 语法模版 GRANT ALL PRIVILEGES ON 库名.表名 TO &#39;用户名&#39;@&#39;IP地址&#39; WITH GRANT OPTION;</span><br><span class=\"line\">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; WITH GRANT OPTION;</span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "MYSQL"
            ]
        }
    ]
}