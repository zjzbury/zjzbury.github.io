{
    "version": "https://jsonfeed.org/version/1",
    "title": "JAVA • All posts by \"docker\" tag",
    "description": "爱编程，爱生活",
    "home_page_url": "http://www.startanew.cn",
    "items": [
        {
            "id": "http://www.startanew.cn/2020/07/13/docker-%E7%9F%A5%E8%AF%86%E8%A1%A5%E5%85%85-1/",
            "url": "http://www.startanew.cn/2020/07/13/docker-%E7%9F%A5%E8%AF%86%E8%A1%A5%E5%85%85-1/",
            "title": "docker 知识补充",
            "date_published": "2020-07-13T08:46:29.000Z",
            "content_html": "<h3 id=\"docker-给容器指定ip\"><a class=\"markdownIt-Anchor\" href=\"#docker-给容器指定ip\">#</a> docker 给容器指定 ip</h3>\n<p>查看网络模式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker network ls</span><br></pre></td></tr></table></figure>\n<p>创建新的 bridge 网络</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker network create --driver bridge --subnet&#x3D;172.18.12.0&#x2F;16 --gateway&#x3D;172.18.1.1</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>  \n<p>启动容器时 通过–network=bridge 网络名称  –ip 指定 ip</p>\n<p>查看容器 ip</p>\n<p>docker inspect 容器名称或 id</p>\n<p>创建集群 docker 命令备份</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -it --name mysql-master -p 3308:3306 -e MYSQL_ROOT_PASSWORD&#x3D;root --privileged&#x3D;true -v E:&#x2F;mysql&#x2F;master&#x2F;conf&#x2F;my.cnf:&#x2F;etc&#x2F;mysql&#x2F;my.cnf -v E:&#x2F;mysql&#x2F;master&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -v E:&#x2F;mysql&#x2F;master&#x2F;logs:&#x2F;var&#x2F;log&#x2F;mysql -d --restart&#x3D;always --network&#x3D;mynet --ip 172.18.12.1 mysql:5.7</span><br><span class=\"line\">docker run -it --name mysql-master1 -p 3318:3306 -e MYSQL_ROOT_PASSWORD&#x3D;root --privileged&#x3D;true -v E:&#x2F;mysql&#x2F;master1&#x2F;conf&#x2F;my.cnf:&#x2F;etc&#x2F;mysql&#x2F;my.cnf -v E:&#x2F;mysql&#x2F;master1&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -v E:&#x2F;mysql&#x2F;master1&#x2F;logs:&#x2F;var&#x2F;log&#x2F;mysql -d --restart&#x3D;always --network&#x3D;mynet --ip 172.18.12.2 mysql:5.7</span><br><span class=\"line\">docker run -it --name mysql-slave -p 3309:3306 -e MYSQL_ROOT_PASSWORD&#x3D;root --privileged&#x3D;true -v E:&#x2F;mysql&#x2F;slave&#x2F;conf&#x2F;my.cnf:&#x2F;etc&#x2F;mysql&#x2F;my.cnf -v E:&#x2F;mysql&#x2F;slave&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -v E:&#x2F;mysql&#x2F;slave&#x2F;logs:&#x2F;var&#x2F;log&#x2F;mysql -d --restart&#x3D;always --network&#x3D;mynet --ip 172.18.12.3 mysql:5.7</span><br><span class=\"line\">docker run -it --name mysql-slave1 -p 3319:3306 -e MYSQL_ROOT_PASSWORD&#x3D;root --privileged&#x3D;true -v E:&#x2F;mysql&#x2F;slave1&#x2F;conf&#x2F;my.cnf:&#x2F;etc&#x2F;mysql&#x2F;my.cnf -v E:&#x2F;mysql&#x2F;slave1&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -v E:&#x2F;mysql&#x2F;slave1&#x2F;logs:&#x2F;var&#x2F;log&#x2F;mysql -d --restart&#x3D;always --network&#x3D;mynet --ip 172.18.12.4 mysql:5.7</span><br><span class=\"line\">docker run -it -p:8166:8066 --name mycat1 -p 9166:9066 -v E:&#x2F;mysql&#x2F;mycat1&#x2F;logs:&#x2F;mycat&#x2F;logs -v E:&#x2F;mysql&#x2F;mycat1&#x2F;conf:&#x2F;mycat&#x2F;conf -d --network&#x3D;mynet --ip 172.18.12.6 mycat:1.6.5</span><br><span class=\"line\">docker run -it -p:8066:8066 --name mycat -p 9066:9066 -v E:&#x2F;mysql&#x2F;mycat&#x2F;logs:&#x2F;mycat&#x2F;logs -v E:&#x2F;mysql&#x2F;mycat&#x2F;conf:&#x2F;mycat&#x2F;conf -d --network&#x3D;mynet --ip 172.18.12.5 mycat:1.6.5</span><br><span class=\"line\">docker run -d --name haproxy -p 8888:8888 -p 13306:3306 --network&#x3D;mynet --ip 172.18.12.7 -v e:&#x2F;mysql&#x2F;haproxy:&#x2F;usr&#x2F;local&#x2F;etc&#x2F;haproxy haproxy:1.9.6</span><br><span class=\"line\">docker run --name redis-6379 -p 6379:6379 --network&#x3D;mynet --ip 172.18.12.10 --privileged&#x3D;true -v E:&#x2F;mysql&#x2F;redis&#x2F;sentinel.conf:&#x2F;sentinel.conf --restart&#x3D;always -d daocloud.io&#x2F;library&#x2F;redis</span><br><span class=\"line\">docker run --name redis-6380 -p 6380:6379 --network&#x3D;mynet --ip 172.18.12.11 --privileged&#x3D;true -v E:&#x2F;mysql&#x2F;redis&#x2F;sentinel.conf:&#x2F;sentinel.conf --restart&#x3D;always -d daocloud.io&#x2F;library&#x2F;redis</span><br><span class=\"line\">docker run --name redis-6381 -p 6381:6379 --network&#x3D;mynet --ip 172.18.12.12 --privileged&#x3D;true -v E:&#x2F;mysql&#x2F;redis&#x2F;sentinel.conf:&#x2F;sentinel.conf --restart&#x3D;always -d daocloud.io&#x2F;library&#x2F;redis</span><br></pre></td></tr></table></figure>\n<p>mycat dockerfile  备份</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM java:8</span><br><span class=\"line\">USER root</span><br><span class=\"line\">COPY Mycat-server-1.6.5-release-20180122220033-linux.tar.gz &#x2F;</span><br><span class=\"line\">RUN tar -zxf &#x2F;Mycat-server-1.6.5-release-20180122220033-linux.tar.gz</span><br><span class=\"line\">ENV MYCAT_HOME&#x3D;&#x2F;mycat</span><br><span class=\"line\">ENV PATH&#x3D;$PATH:$&#123;MYCAT_HOME&#125;&#x2F;bin</span><br><span class=\"line\">WORKDIR $MYCAT_HOME&#x2F;bin</span><br><span class=\"line\">RUN chmod u+x .&#x2F;mycat</span><br><span class=\"line\">EXPOSE 8066 9066</span><br><span class=\"line\">CMD [&quot;.&#x2F;mycat&quot;, &quot;console&quot;]</span><br></pre></td></tr></table></figure>",
            "tags": [
                "docker"
            ]
        },
        {
            "id": "http://www.startanew.cn/2020/07/13/docker-%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F%E4%B8%8E%E6%8F%90%E4%BA%A4/",
            "url": "http://www.startanew.cn/2020/07/13/docker-%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F%E4%B8%8E%E6%8F%90%E4%BA%A4/",
            "title": "docker 创建镜像与提交",
            "date_published": "2020-07-13T06:29:00.000Z",
            "content_html": "<h3 id=\"创建镜像\"><a class=\"markdownIt-Anchor\" href=\"#创建镜像\">#</a> 创建镜像</h3>\n<ul>\n<li>创建文件 Dockerfile</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM centos:7</span><br><span class=\"line\">MAINTAINER bury &quot;2054084196@qq.com&quot;</span><br><span class=\"line\">RUN rpm -ivh http:&#x2F;&#x2F;nginx.org&#x2F;packages&#x2F;centos&#x2F;7&#x2F;noarch&#x2F;RPMS&#x2F;nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br><span class=\"line\">RUN yum install -y nginx</span><br><span class=\"line\">EXPOSE 80</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>  \n<ul>\n<li>构建镜像:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t&#x3D;“medua&#x2F;bury:v1” . </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>(- t 告诉 Docker 镜像的名称和版本。是为了让 Docker 到当前本地目录去寻找 Dockerfile 文件)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker commit -a “bury” -m “第一次提交鏡像”  daf571e7608b medua&#x2F;bury:v1.0</span><br></pre></td></tr></table></figure>\n<p>a “bury” 为创建镜像的作者名字<br>\n - m “第一次提交鏡像” 为提交信息<br>\n daf571e7608b 为容器 id,medua/bury 为镜像名，<br>\nv1.0 为 tag<br>\ndocker images 命令可见镜像创建成功<br>\n docker push medua/bury:v1.0 (推送到服务器)</p>\n<center>\n <img data-src=\"http://vps.startanew.cn/1594621928977llpohrz0.png\" >\n</center>  \n>补充:  \ndocker inspect 容器ID | grep IPAddress(查看容器ip地址)\n",
            "tags": [
                "docker"
            ]
        },
        {
            "id": "http://www.startanew.cn/2020/07/13/docker-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/",
            "url": "http://www.startanew.cn/2020/07/13/docker-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/",
            "title": "docker 基础入门",
            "date_published": "2020-07-13T06:18:00.000Z",
            "content_html": "<h3 id=\"一-win10安装docker\"><a class=\"markdownIt-Anchor\" href=\"#一-win10安装docker\">#</a> 一 . win10 安装 docker</h3>\n<blockquote>\n<p>官网地址:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS8=\">https://hub.docker.com/</span><br>\n 注册，下载 ， 双击安装包进行安装<br>\n安装完成后，打开软件，当状态栏出现一个鲸鱼的小图标，并且显示 isrunning 时运行成功。<br>\n设置加速<br>\n阿里云教程:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jci5jb25zb2xlLmFsaXl1bi5jb20vY24taGFuZ3pob3UvaW5zdGFuY2VzL21pcnJvcnM=\">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</span></p>\n</blockquote>\n<a id=\"more\"></a>  \n<h3 id=\"二-基础操作\"><a class=\"markdownIt-Anchor\" href=\"#二-基础操作\">#</a> 二。基础操作</h3>\n<blockquote>\n<p>查看版本:docker version<br>\n 搭建 web 服务器<br>\n拉取镜像:  docker run -p 80 –name web -i -t centos /bin/bash<br>\n 安装  nginx 服务器：rpm -ivh <span class=\"exturl\" data-url=\"aHR0cDovL25naW54Lm9yZy9wYWNrYWdlcy9jZW50b3MvNy9ub2FyY2gvUlBNUy9uZ2lueC1yZWxlYXNlLWNlbnRvcy03LTAuZWw3Lm5neC5ub2FyY2gucnBt\">http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br>\nyum install -y nginx<br>\n 切换后台运行 web 服务器 现在，ctrl+p   ctrl+q 切换到后台。<br>\n查看运行端口 : docker ps -a<br>\n 在浏览器访问:<span class=\"exturl\" data-url=\"aHR0cDovLzEyNy4wLjAuMTozMjc2OA==\">http://127.0.0.1:32768</span></p>\n</blockquote>\n<center>\n <img data-src=\"http://vps.startanew.cn/1594621402325bkw2sjr9.png\" >\n</center>    \n<blockquote>\n<p>成功</p>\n</blockquote>\n<h3 id=\"三-命令详解\"><a class=\"markdownIt-Anchor\" href=\"#三-命令详解\">#</a> 三。命令详解</h3>\n<blockquote>\n<p>docker  images  查看已有镜像<br>\n docker  pull  name 拉取镜像<br>\n docker  search  name  搜索镜像<br>\n docker   run  运行一个容器（每次使用都会创建一个新的容器）<br>\n/bin/bash  运行交互式容器<br>\n - i 选项告诉 Docker 容器保持标准输入流对容器开放<br>\n - t 选项告诉 Docker 为容器分配一个虚拟终端<br>\n - d 选项告诉 Docker 在后台运行容器的守护进程<br>\n docker start 重新启动已存在的镜像<br>\n exit 命令关闭 Docker 容器<br>\n docker stop name 停止 name 容器<br>\n docker attach 命令切换到运行交互式容器（Docker 容器重启后会沿用 docker run 命令指定的参数来运行）<br>\n官方文档链接:  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vZW5naW5lL3JlZmVyZW5jZS9jb21tYW5kbGluZS9kb2NrZXIv\">https://docs.docker.com/engine/reference/commandline/docker/</span></p>\n</blockquote>\n",
            "tags": [
                "docker"
            ]
        }
    ]
}